{
	"info": {
		"_postman_id": "3c5c776d-01d1-43fe-bc1d-9f69ba14ffff",
		"name": "MDHostel_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33215572"
	},
	"item": [
		{
			"name": "admin",
			"item": [
				{
					"name": "error_record",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "api_name",
									"value": "https://glexas.com/hostel_data/API/leave/leave_view.php",
									"type": "text"
								},
								{
									"key": "error_code",
									"value": "15",
									"type": "text"
								},
								{
									"key": "message",
									"value": "Access Denied... You are not allowed to access",
									"type": "text"
								},
								{
									"key": "type",
									"value": "FLU",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}admin/error_record.php",
							"host": [
								"{{path}}admin"
							],
							"path": [
								"error_record.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "faqs_details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}admin/faqs_details.php",
							"host": [
								"{{path}}admin"
							],
							"path": [
								"faqs_details.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "support_details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "flag",
									"value": "S",
									"type": "text"
								},
								{
									"key": "flag",
									"value": "F",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "SA",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "FA",
									"type": "text",
									"disabled": true
								},
								{
									"key": "support_title",
									"value": "Nothing",
									"type": "text"
								},
								{
									"key": "description",
									"value": "jhssjh",
									"type": "text"
								},
								{
									"key": "user_code",
									"value": "ABCD",
									"type": "text"
								},
								{
									"key": "phone_number",
									"value": "10395103",
									"type": "text"
								},
								{
									"key": "country_code",
									"value": "+91",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}admin/support_details.php",
							"host": [
								"{{path}}admin"
							],
							"path": [
								"support_details.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin_superadmin_pc_queries",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "flag",
									"value": "queries",
									"type": "text"
								},
								{
									"key": "flag",
									"value": "image_change",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "query_request",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "image_change_request",
									"type": "text",
									"disabled": true
								},
								{
									"key": "request",
									"value": "Y",
									"type": "text",
									"disabled": true
								},
								{
									"key": "request",
									"value": "N",
									"type": "text",
									"disabled": true
								},
								{
									"key": "support_main_id",
									"value": "8",
									"type": "text",
									"disabled": true
								},
								{
									"key": "reason",
									"value": "Nothing",
									"type": "text",
									"disabled": true
								},
								{
									"key": "filter_flag",
									"value": "F",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{local_path}}admin/admin_superadmin_pc_queries.php",
							"host": [
								"{{local_path}}admin"
							],
							"path": [
								"admin_superadmin_pc_queries.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin_user_list.php",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "flag",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{local_path}}admin/admin_user_list.php",
							"host": [
								"{{local_path}}admin"
							],
							"path": [
								"admin_user_list.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "error_record_without_token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "api_name",
									"value": "",
									"type": "text"
								},
								{
									"key": "error_code",
									"value": "",
									"type": "text"
								},
								{
									"key": "message",
									"value": "",
									"type": "text"
								},
								{
									"key": "type",
									"value": "",
									"type": "text"
								},
								{
									"key": "created_by",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}admin/error_record_without_token.php",
							"host": [
								"{{path}}admin"
							],
							"path": [
								"error_record_without_token.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "asset",
			"item": [
				{
					"name": "manager_asset_main",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"asset_main_id\": 67\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}asset/manager_asset_main.php",
							"host": [
								"{{path}}asset"
							],
							"path": [
								"manager_asset_main.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_asset_main",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"asset_main_id\": 67\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}asset/manager_asset_main.php",
							"host": [
								"{{path}}asset"
							],
							"path": [
								"manager_asset_main.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_asset_main",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "asset_use_type",
									"value": "K",
									"type": "text"
								},
								{
									"key": "asset_use_type",
									"value": "O",
									"type": "text",
									"disabled": true
								},
								{
									"key": "asset_use_type",
									"value": "G",
									"type": "text",
									"disabled": true
								},
								{
									"key": "asset_use_type",
									"value": "R",
									"type": "text",
									"disabled": true
								},
								{
									"key": "asset_name",
									"value": "chair",
									"type": "text"
								},
								{
									"key": "description",
									"value": "abcd",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "2",
									"type": "text"
								},
								{
									"key": "price_per_unit",
									"value": "100",
									"type": "text"
								},
								{
									"key": "total_price",
									"value": "200",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}asset/manager_asset_main.php",
							"host": [
								"{{path}}asset"
							],
							"path": [
								"manager_asset_main.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_asset_main",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"asset_main_id\": 67,\r\n    \"asset_use_type\":\"K\",\r\n    \"asset_name\":\"chair\",\r\n    \"description\": \"abcd\",\r\n    \"quantity\": 2,\r\n    \"price_per_unit\": 1,\r\n    \"total_price\": 1000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}asset/manager_asset_main.php",
							"host": [
								"{{path}}asset"
							],
							"path": [
								"manager_asset_main.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "attendance",
			"item": [
				{
					"name": "manager_activate_cycle_cd",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set required environment variables\r",
									"pm.environment.set(\"user_role\", \"rector\"); // or \"manager\"\r",
									"pm.environment.set(\"user_code\", \"example_user_code\");\r",
									"pm.environment.set(\"hostel_code\", \"example_hostel_code\");\r",
									"\r",
									"// Mock functions for database operations and student counts\r",
									"function setupDatabaseConnection() {\r",
									"    // Mock database setup\r",
									"}\r",
									"\r",
									"function getBranchBuildingMainId(userCode, hostelCode) {\r",
									"    return 1; // Mocked branch_building_main_id\r",
									"}\r",
									"\r",
									"function noOfTotalStudent(isActive) {\r",
									"    return 100; // Mocked total number of students\r",
									"}\r",
									"\r",
									"function noOfLeaveStudent(isActive, leaveStatus) {\r",
									"    return 10; // Mocked number of students on leave\r",
									"}\r",
									"\r",
									"// Setup database connection\r",
									"setupDatabaseConnection();\r",
									"\r",
									"// Get branch building main ID for rector\r",
									"if (pm.environment.get(\"user_role\") === \"rector\") {\r",
									"    const branchBuildingMainId = getBranchBuildingMainId(pm.environment.get(\"user_code\"), pm.environment.get(\"hostel_code\"));\r",
									"    pm.environment.set(\"branch_building_main_id\", branchBuildingMainId);\r",
									"}\r",
									"\r",
									"// Calculate student counts\r",
									"const numberOfTotalStudent = noOfTotalStudent('Y');\r",
									"const numberOfLeaveStudent = noOfLeaveStudent('N', 'Y');\r",
									"const numberOfActiveStudent = numberOfTotalStudent - numberOfLeaveStudent;\r",
									"\r",
									"// Set calculated values in environment\r",
									"pm.environment.set(\"number_of_total_student\", numberOfTotalStudent);\r",
									"pm.environment.set(\"number_of_leave_student\", numberOfLeaveStudent);\r",
									"pm.environment.set(\"number_of_active_student\", numberOfActiveStudent);\r",
									"\r",
									"// Prepare request body\r",
									"const requestBody = {\r",
									"    user_code: pm.environment.get(\"user_code\"),\r",
									"    hostel_code: pm.environment.get(\"hostel_code\"),\r",
									"    building_id: pm.environment.get(\"branch_building_main_id\"),\r",
									"    attendance_start_time: pm.environment.get(\"current_date_time\"),\r",
									"    no_of_active_student: numberOfActiveStudent,\r",
									"    no_of_student_on_leave: numberOfLeaveStudent,\r",
									"    created_by: pm.environment.get(\"user_code\")\r",
									"};\r",
									"\r",
									"// Set the request body\r",
									"pm.variables.set(\"requestBody\", JSON.stringify(requestBody));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"  pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status should be true\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Message should be 'Cycle Activated returning ID'\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.message).to.eql(\"Cycle Activated returning ID\");\r",
									"});\r",
									"\r",
									"pm.test(\"Data should contain an ID\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.data).to.be.a(\"number\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}attendance/manager_activate_cycle_cd.php",
							"host": [
								"{{path}}attendance"
							],
							"path": [
								"manager_activate_cycle_cd.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_activate_cycle_cd",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Define the attendance_detail_id variable\r",
									"var attendance_detail_id = 123; // Replace 123 with the actual ID you want to use\r",
									"\r",
									"// Log a message indicating the attendance_detail_id being used\r",
									"console.log(\"Using attendance_detail_id:\", attendance_detail_id);\r",
									"\r",
									"// Set the variable in the request body\r",
									"pm.environment.set(\"attendance_detail_id\", attendance_detail_id);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Ensure the status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Ensure the response is JSON\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"// Check that the status is true\r",
									"pm.test(\"Status should be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"\r",
									"// Check that the message is 'Cycle Deactivated'\r",
									"pm.test(\"Message should be 'Cycle Deactivated'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Cycle Deactivated\");\r",
									"});\r",
									"\r",
									"// Additional tests for error scenarios\r",
									"pm.test(\"Error message when deactivation fails\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (jsonData.status === false) {\r",
									"        pm.expect(jsonData.message).to.be.oneOf([\r",
									"            'You cannot deactivate the cycle', \r",
									"            'DB fetch failed', \r",
									"            'Access denied. You do not have permission to access this resource.'\r",
									"        ]);\r",
									"    }\r",
									"});\r",
									"\r",
									"// Schema validation using AJV\r",
									"const Ajv = require('ajv');\r",
									"const ajv = new Ajv();\r",
									"\r",
									"// Define the schema\r",
									"const schema = {\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"        \"status\": { \"type\": \"boolean\" },\r",
									"        \"message\": { \"type\": \"string\" },\r",
									"        \"data\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"attendance_detail_id\": { \"type\": \"integer\" },\r",
									"                \"no_of_missing_student\": { \"type\": \"integer\" },\r",
									"                \"no_of_present_student\": { \"type\": \"integer\" },\r",
									"                \"no_of_absent_student\": { \"type\": \"integer\" },\r",
									"                \"no_of_attendance_taken_student\": { \"type\": \"integer\" }\r",
									"            },\r",
									"            \"required\": [\"attendance_detail_id\", \"no_of_missing_student\", \"no_of_present_student\", \"no_of_absent_student\", \"no_of_attendance_taken_student\"]\r",
									"        }\r",
									"    },\r",
									"    \"required\": [\"status\", \"message\"]\r",
									"};\r",
									"\r",
									"// Get the response JSON\r",
									"const responseData = pm.response.json();\r",
									"\r",
									"// Validate the response against the schema\r",
									"const validate = ajv.compile(schema);\r",
									"const isValid = validate(responseData);\r",
									"\r",
									"// Test for schema match\r",
									"pm.test(\"Response Schema Validation\", function () {\r",
									"    pm.expect(isValid).to.be.true;\r",
									"    if (!isValid) {\r",
									"        console.log(validate.errors);\r",
									"        pm.expect.fail('Schema validation failed');\r",
									"    }\r",
									"});\r",
									"\r",
									"// Test case to check the request body for attendance_detail_id\r",
									"pm.test(\"Request body contains attendance_detail_id\", function () {\r",
									"    var requestBody = pm.request.body.raw;\r",
									"    try {\r",
									"        var parsedRequestBody = JSON.parse(requestBody);\r",
									"        \r",
									"        pm.expect(parsedRequestBody).to.have.property(\"attendance_detail_id\");\r",
									"        pm.expect(parsedRequestBody.attendance_detail_id).to.not.be.null;\r",
									"        pm.expect(parsedRequestBody.attendance_detail_id).to.be.a('number');\r",
									"    } catch (e) {\r",
									"        pm.expect.fail(\"attendance_detail_id not given or invalid JSON\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"attendance_detail_id\": 41 \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}attendance/manager_activate_cycle_cd.php",
							"host": [
								"{{path}}attendance"
							],
							"path": [
								"manager_activate_cycle_cd.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_attendance_status_r",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"// Set the attendance_detail_id\r",
									"pm.environment.set(\"attendance_detail_id\", 1);\r",
									"\r",
									"// Example: setting the current time as an environment variable\r",
									"let currentTimestamp = new Date().toISOString();\r",
									"pm.environment.set(\"current_timestamp\", currentTimestamp);\r",
									"\r",
									"// Log the values for debugging purposes\r",
									"console.log(\"Pre-request script executed. attendance_detail_id:\", pm.environment.get(\"attendance_detail_id\"));\r",
									"console.log(\"Current Timestamp:\", pm.environment.get(\"current_timestamp\"));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if the required params are given\r",
									"const attendanceDetailId = pm.request.url.query.get(\"attendance_detail_id\");\r",
									"\r",
									"pm.test(\"Required parameter attendance_detail_id is provided\", function () {\r",
									"    pm.expect(attendanceDetailId, \"attendance_detail_id is required\").to.not.be.undefined;\r",
									"});\r",
									"\r",
									"if (attendanceDetailId) {\r",
									"    // Ensure the status code is 200\r",
									"    pm.test(\"Status code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"\r",
									"    // Ensure the response is JSON\r",
									"    pm.test(\"Response should be JSON\", function () {\r",
									"        pm.response.to.be.json;\r",
									"    });\r",
									"\r",
									"    // Check that the status is true\r",
									"    pm.test(\"Status should be true\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.status).to.eql(true);\r",
									"    });\r",
									"\r",
									"    // Check that the message is 'User List'\r",
									"    pm.test(\"Message should be 'User List'\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.message).to.eql(\"User List\");\r",
									"    });\r",
									"\r",
									"    // Check if the data array contains the expected fields\r",
									"    pm.test(\"Data should contain expected fields\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        var data = jsonData.data[0];\r",
									"\r",
									"        pm.expect(data).to.have.property(\"no_of_total_student\");\r",
									"        pm.expect(data).to.have.property(\"attendance_start_time\");\r",
									"        pm.expect(data).to.have.property(\"attendance_end_time\");\r",
									"        pm.expect(data).to.have.property(\"no_of_active_student\");\r",
									"        pm.expect(data).to.have.property(\"no_of_student_on_leave\");\r",
									"        pm.expect(data).to.have.property(\"no_of_missing_student\");\r",
									"        pm.expect(data).to.have.property(\"no_of_present_student\");\r",
									"        pm.expect(data).to.have.property(\"no_of_absent_student\");\r",
									"    });\r",
									"\r",
									"    // Check if the response contains the required data structure\r",
									"    pm.test(\"Response should contain the required data structure\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData).to.have.property('status');\r",
									"        pm.expect(jsonData).to.have.property('message');\r",
									"        pm.expect(jsonData).to.have.property('data');\r",
									"        pm.expect(jsonData.data).to.be.an('array');\r",
									"    });\r",
									"\r",
									"    // Additional test to check if the attendance_detail_id is valid\r",
									"    pm.test(\"attendance_detail_id should be a valid number\", function () {\r",
									"        pm.expect(parseInt(attendanceDetailId)).to.be.a('number').that.is.not.NaN;\r",
									"    });\r",
									"} else {\r",
									"    // Fail the test if the required parameter is not provided\r",
									"    pm.test(\"Failing test due to missing attendance_detail_id\", function () {\r",
									"        pm.expect.fail(\"Test failed due to missing attendance_detail_id\");\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}attendance/manager_attendance_status_r.php?attendance_detail_id=3",
							"host": [
								"{{path}}attendance"
							],
							"path": [
								"manager_attendance_status_r.php"
							],
							"query": [
								{
									"key": "attendance_detail_id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_deactivate_cycle",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Function to set attendance_detail_id if not provided\r",
									"function setAttendanceDetailId() {\r",
									"    // Check if attendance_detail_id is already set\r",
									"    let attendanceDetailId = pm.environment.get(\"attendance_detail_id\");\r",
									"    \r",
									"    // If attendance_detail_id is not set, generate a default value (for example, 1)\r",
									"    if (!attendanceDetailId) {\r",
									"        attendanceDetailId = 1; // You can modify this as needed\r",
									"        pm.environment.set(\"attendance_detail_id\", attendanceDetailId);\r",
									"    }\r",
									"\r",
									"    // Add attendance_detail_id to the request parameters\r",
									"    pm.request.url.query.add({ key: \"attendance_detail_id\", value: attendanceDetailId.toString() });\r",
									"}\r",
									"\r",
									"// Set the attendance_detail_id\r",
									"setAttendanceDetailId();\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if the status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Check if the response is in JSON format\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"// Check if the status in the response is true\r",
									"pm.test(\"Status should be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"\r",
									"// Check if the message in the response is 'Cycle Deactivated'\r",
									"pm.test(\"Message should be 'Cycle Deactivated'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Cycle Deactivated\");\r",
									"});\r",
									"\r",
									"// Check if the status is false and message is 'You cannot deactivate the cycle'\r",
									"pm.test(\"Status should be false and message should be 'You cannot deactivate the cycle' when no cycle is deactivated\", function () {\r",
									"    if (!pm.response.json().status) {\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.status).to.eql(false);\r",
									"        pm.expect(jsonData.message).to.eql(\"You cannot deactivate the cycle\");\r",
									"    }\r",
									"});\r",
									"// Test if attendance_detail_id is provided in form-data\r",
									"// Test if attendance_detail_id is provided in form-data\r",
									"pm.test(\"attendance_detail_id should be provided in form-data\", function () {\r",
									"    var formData = pm.request.body.formdata;\r",
									"    var attendanceDetailIdFound = false;\r",
									"\r",
									"    formData.each(function (param) {\r",
									"        if (param.key === \"attendance_detail_id\" && param.value) {\r",
									"            attendanceDetailIdFound = true;\r",
									"        }\r",
									"    });\r",
									"\r",
									"    pm.expect(attendanceDetailIdFound).to.be.true;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "attendance_detail_id",
									"value": "71",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}attendance/manager_deactivate_cycle.php",
							"host": [
								"{{path}}attendance"
							],
							"path": [
								"manager_deactivate_cycle.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_deactivated_attendance_list_r",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Function to generate a random date within a range\r",
									"function getRandomDate(start, end) {\r",
									"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Generate random dates for from_date and to_date\r",
									"const fromDate = getRandomDate(new Date(2010, 0, 1), new Date());\r",
									"const toDate = getRandomDate(fromDate, new Date());\r",
									"\r",
									"// Convert dates to string format YYYY-MM-DD\r",
									"const fromDateStr = fromDate.toISOString().split('T')[0];\r",
									"const toDateStr = toDate.toISOString().split('T')[0];\r",
									"\r",
									"// Set the environment variables for from_date and to_date\r",
									"pm.environment.set(\"from_date\", fromDateStr);\r",
									"pm.environment.set(\"to_date\", toDateStr);\r",
									"\r",
									"// Log the generated dates\r",
									"console.log(\"Generated from_date: \" + fromDateStr);\r",
									"console.log(\"Generated to_date: \" + toDateStr);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if the status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Check if the response is in JSON format\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"// Check if the status in the response is true\r",
									"pm.test(\"Status should be true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"\r",
									"// Check if the message in the response is 'User List'\r",
									"pm.test(\"Message should be 'User List'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User List\");\r",
									"});\r",
									"\r",
									"// Validate the structure of the data array\r",
									"pm.test(\"Data should be an array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.be.an('array');\r",
									"});\r",
									"\r",
									"// Validate the structure and values of the first object in the data array\r",
									"pm.test(\"Validate first object in data array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var firstObject = jsonData.data[0];\r",
									"\r",
									"    pm.expect(firstObject).to.have.property('no_of_total_student');\r",
									"    pm.expect(firstObject).to.have.property('attendance_detail_id');\r",
									"    pm.expect(firstObject).to.have.property('attendance_start_time');\r",
									"    pm.expect(firstObject).to.have.property('attendance_end_time');\r",
									"    pm.expect(firstObject).to.have.property('no_of_active_student');\r",
									"    pm.expect(firstObject).to.have.property('no_of_student_on_leave');\r",
									"    pm.expect(firstObject).to.have.property('no_of_missing_student');\r",
									"    pm.expect(firstObject).to.have.property('no_of_present_student');\r",
									"    pm.expect(firstObject).to.have.property('no_of_absent_student');\r",
									"});\r",
									"\r",
									"// Test if to_date and from_date parameters are provided\r",
									"pm.test(\"to_date and from_date parameters should be provided\", function () {\r",
									"    var queryParams = pm.request.url.query;\r",
									"\r",
									"    var toDateFound = false;\r",
									"    var fromDateFound = false;\r",
									"\r",
									"    queryParams.each(function (param) {\r",
									"        if (param.key === \"to_date\" && param.value) {\r",
									"            toDateFound = true;\r",
									"        }\r",
									"        if (param.key === \"from_date\" && param.value) {\r",
									"            fromDateFound = true;\r",
									"        }\r",
									"    });\r",
									"\r",
									"    pm.expect(toDateFound).to.be.true;\r",
									"    pm.expect(fromDateFound).to.be.true;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}attendance/manager_deactivated_attendance_list_r.php?to_date=2023-11-28&from_date=2023-11-28",
							"host": [
								"{{path}}attendance"
							],
							"path": [
								"manager_deactivated_attendance_list_r.php"
							],
							"query": [
								{
									"key": "to_date",
									"value": "2023-11-28"
								},
								{
									"key": "from_date",
									"value": "2023-11-28"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_is_cycle_active_r",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Generate random from_date and to_date within a range of 30 days\r",
									"const fromDate = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // 30 days ago\r",
									"const toDate = new Date();\r",
									"\r",
									"// Format dates as YYYY-MM-DD\r",
									"const fromDateString = fromDate.toISOString().split('T')[0];\r",
									"const toDateString = toDate.toISOString().split('T')[0];\r",
									"\r",
									"// Set environment variables for from_date and to_date\r",
									"pm.environment.set(\"from_date\", fromDateString);\r",
									"pm.environment.set(\"to_date\", toDateString);\r",
									"\r",
									"// Log generated dates\r",
									"console.log(\"Generated from_date: \" + fromDateString);\r",
									"console.log(\"Generated to_date: \" + toDateString);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if the status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Check if the response is in JSON format\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"// Check if the status in the response is true or false as expected\r",
									"pm.test(\"Status should be true or false\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.be.oneOf([true, false]);\r",
									"});\r",
									"\r",
									"// When cycle is active\r",
									"pm.test(\"Validate cycle active data structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (jsonData.status === true && jsonData.message === \"cycle active data\") {\r",
									"        pm.expect(jsonData).to.have.property('attendance_detail_id');\r",
									"        pm.expect(jsonData).to.have.property('data').that.is.an('array');\r",
									"        jsonData.data.forEach(room => {\r",
									"            pm.expect(room).to.have.property('status').that.equals(true);\r",
									"            pm.expect(room).to.have.property('room_name').that.is.a('string');\r",
									"            pm.expect(room).to.have.property('student_data').that.is.an('array');\r",
									"            room.student_data.forEach(student => {\r",
									"                pm.expect(student).to.have.property('user_code').that.is.a('string');\r",
									"                pm.expect(student).to.have.property('first_name').that.is.a('string');\r",
									"                pm.expect(student).to.have.property('photo').that.is.a('string');\r",
									"                pm.expect(student).to.have.property('hostel_code').that.is.a('string');\r",
									"                pm.expect(student).to.have.property('middle_name').that.is.a('string');\r",
									"                pm.expect(student).to.have.property('last_name').that.is.a('string');\r",
									"                pm.expect(student).to.have.property('mobile_number').that.is.a('string');\r",
									"                pm.expect(student).to.have.property('country_code').that.is.a('string');\r",
									"                pm.expect(student).to.have.property('email').that.is.a('string');\r",
									"                pm.expect(student).to.have.property('current_status').that.is.a('string');\r",
									"                pm.expect(student).to.have.property('updated_status').that.is.a('string');\r",
									"                pm.expect(student).to.have.property('leave_color').that.is.a('string');\r",
									"                pm.expect(student).to.have.property('student_attendance_record_id').that.is.a('string');\r",
									"            });\r",
									"        });\r",
									"    }\r",
									"});\r",
									"\r",
									"// When cycle is inactive\r",
									"pm.test(\"Validate cycle inactive data structure\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (jsonData.status === true && jsonData.message === \"data\") {\r",
									"        pm.expect(jsonData).to.have.property('number_of_total_student').that.is.a('number');\r",
									"        pm.expect(jsonData).to.have.property('no_of_leave_student').that.is.a('number');\r",
									"        pm.expect(jsonData).to.have.property('number_of_active_student').that.is.a('number');\r",
									"        pm.expect(jsonData).to.have.property('data').that.is.an('array');\r",
									"        jsonData.data.forEach(leave => {\r",
									"            pm.expect(leave).to.have.property('leave_main_id').that.is.a('string');\r",
									"            pm.expect(leave).to.have.property('leave_name').that.is.a('string');\r",
									"            pm.expect(leave).to.have.property('leave_color').that.is.a('string');\r",
									"            pm.expect(leave).to.have.property('no_of_leave').that.is.a('number');\r",
									"        });\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}attendance/manager_is_cycle_active_r.php",
							"host": [
								"{{path}}attendance"
							],
							"path": [
								"manager_is_cycle_active_r.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_send_notification",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Generate random flag (student or parent)\r",
									"const flagOptions = [\"student\", \"parent\"];\r",
									"const randomFlag = flagOptions[Math.floor(Math.random() * flagOptions.length)];\r",
									"\r",
									"// Generate random flag_usertype (assuming possible values are \"S\" and \"P\")\r",
									"const randomFlagUsertype = Math.random() < 0.5 ? \"S\" : \"P\";\r",
									"\r",
									"// Generate a random cycle_id (assuming it's an integer)\r",
									"const randomCycleId = Math.floor(Math.random() * 1000) + 1; // Random integer between 1 and 1000\r",
									"\r",
									"// Set environment variables for flag, flag_usertype, and cycle_id\r",
									"pm.environment.set(\"flag\", randomFlag);\r",
									"pm.environment.set(\"flag_usertype\", randomFlagUsertype);\r",
									"pm.environment.set(\"cycle_id\", randomCycleId);\r",
									"\r",
									"// Log generated values\r",
									"console.log(\"Generated flag: \" + randomFlag);\r",
									"console.log(\"Generated flag_usertype: \" + randomFlagUsertype);\r",
									"console.log(\"Generated cycle_id: \" + randomCycleId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name is 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"// Test that the status field is true\r",
									"pm.test(\"Status is true\", function () {\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"\r",
									"// Test that the message field exists\r",
									"pm.test(\"Message field exists\", function () {\r",
									"    pm.expect(jsonData).to.have.property('message');\r",
									"});\r",
									"\r",
									"// Test for the content of the message field\r",
									"pm.test(\"Message content is correct\", function () {\r",
									"    var expectedMessage = \"Notification not send\"; // Update with the expected message\r",
									"    pm.expect(jsonData.message).to.eql(expectedMessage);\r",
									"});\r",
									"\r",
									"// Test if flag, flag_usertype, and cycle_id parameters are provided\r",
									"pm.test(\"flag, flag_usertype, and cycle_id parameters should be provided\", function () {\r",
									"    var formData = pm.request.body.formdata;\r",
									"\r",
									"    var flagFound = false;\r",
									"    var flagUserTypeFound = false;\r",
									"    var cycleIdFound = false;\r",
									"\r",
									"    formData.each(function (param) {\r",
									"        if (param.key === \"flag\" && param.value) {\r",
									"            flagFound = true;\r",
									"        }\r",
									"        if (param.key === \"flag_usertype\" && param.value) {\r",
									"            flagUserTypeFound = true;\r",
									"        }\r",
									"        if (param.key === \"cycle_id\" && param.value) {\r",
									"            cycleIdFound = true;\r",
									"        }\r",
									"    });\r",
									"\r",
									"    pm.expect(flagFound).to.be.true;\r",
									"    pm.expect(flagUserTypeFound).to.be.true;\r",
									"    pm.expect(cycleIdFound).to.be.true;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "flag",
									"value": "student",
									"type": "text"
								},
								{
									"key": "flag_usertype",
									"value": "O",
									"type": "text"
								},
								{
									"key": "cycle_id",
									"value": "2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}attendance/manager_send_notification.php",
							"host": [
								"{{path}}attendance"
							],
							"path": [
								"manager_send_notification.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_student_attendance_status_update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Generate random updated_status (assuming possible values are 'I', 'O', 'M')\r",
									"const updatedStatusOptions = ['I', 'O', 'M'];\r",
									"const randomUpdatedStatus = updatedStatusOptions[Math.floor(Math.random() * updatedStatusOptions.length)];\r",
									"\r",
									"// Generate a random student_attendance_record_id (assuming it's an integer)\r",
									"const randomStudentAttendanceRecordId = Math.floor(Math.random() * 1000) + 1; // Random integer between 1 and 1000\r",
									"\r",
									"// Set environment variables for updated_status and student_attendance_record_id\r",
									"pm.environment.set(\"updated_status\", randomUpdatedStatus);\r",
									"pm.environment.set(\"student_attendance_record_id\", randomStudentAttendanceRecordId);\r",
									"\r",
									"// Log generated values\r",
									"console.log(\"Generated updated_status: \" + randomUpdatedStatus);\r",
									"console.log(\"Generated student_attendance_record_id: \" + randomStudentAttendanceRecordId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"// Test for message field\r",
									"pm.test(\"Message field exists\", function () {\r",
									"    pm.expect(jsonData).to.have.property('message');\r",
									"});\r",
									"\r",
									"// Test for data field\r",
									"pm.test(\"Data field exists\", function () {\r",
									"    pm.expect(jsonData).to.have.property('data');\r",
									"});\r",
									"\r",
									"// Test for status value\r",
									"pm.test(\"Status is true\", function () {\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"\r",
									"// Test for message value\r",
									"pm.test(\"Message is correct\", function () {\r",
									"    pm.expect(jsonData.message).to.eql('User List');\r",
									"});\r",
									"\r",
									"// Test for data structure and content\r",
									"pm.test(\"Data structure and content\", function () {\r",
									"    pm.expect(jsonData.data).to.be.an('array').that.is.not.empty;\r",
									"    pm.expect(jsonData.data[0]).to.have.property('TOTAL');\r",
									"    pm.expect(jsonData.data[0]).to.have.property('IN');\r",
									"    pm.expect(jsonData.data[0]).to.have.property('OUT');\r",
									"    pm.expect(jsonData.data[0]).to.have.property('MISSING');\r",
									"});\r",
									"\r",
									"// Test if updated_status and student_attendance_record_id parameters are provided\r",
									"pm.test(\"updated_status and student_attendance_record_id parameters should be provided\", function () {\r",
									"    var formData = pm.request.body.formdata;\r",
									"\r",
									"    var updatedStatusFound = false;\r",
									"    var studentAttendanceRecordIdFound = false;\r",
									"\r",
									"    formData.each(function (param) {\r",
									"        if (param.key === \"updated_status\" && param.value) {\r",
									"            updatedStatusFound = true;\r",
									"        }\r",
									"        if (param.key === \"student_attendance_record_id\" && param.value) {\r",
									"            studentAttendanceRecordIdFound = true;\r",
									"        }\r",
									"    });\r",
									"\r",
									"    pm.expect(updatedStatusFound).to.be.true;\r",
									"    pm.expect(studentAttendanceRecordIdFound).to.be.true;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "updated_status",
									"value": "O",
									"type": "text"
								},
								{
									"key": "student_attendance_record_id",
									"value": "2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}attendance/manager_student_attendance_status_update.php",
							"host": [
								"{{path}}attendance"
							],
							"path": [
								"manager_student_attendance_status_update.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_student_status_list_r",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Pre-request Script\r",
									"\r",
									"// Set the required headers\r",
									"pm.request.headers.add({key: \"Content-Type\", value: \"application/json\"});\r",
									"\r",
									"// Set dynamic environment variables if needed\r",
									"pm.environment.set(\"hostel_code\", \"example_hostel_code\");\r",
									"pm.environment.set(\"user_code\", \"example_user_code\");\r",
									"\r",
									"// Set query parameters dynamically if needed\r",
									"pm.request.url.query.add({key: \"filter\", value: \"M\"});\r",
									"pm.request.url.query.add({key: \"attendance_detail_id\", value: \"12345\"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"// Test for status field\r",
									"pm.test(\"Status field exists\", function () {\r",
									"    pm.expect(jsonData).to.have.property('status');\r",
									"});\r",
									"\r",
									"// Test for student_list field\r",
									"pm.test(\"student_list field exists\", function () {\r",
									"    pm.expect(jsonData).to.have.property('student_list');\r",
									"});\r",
									"\r",
									"// Test for status value\r",
									"pm.test(\"Status is true\", function () {\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"\r",
									"// Test for student_list structure and content\r",
									"pm.test(\"student_list structure and content\", function () {\r",
									"    pm.expect(jsonData.student_list).to.be.an('array');\r",
									"    if (jsonData.student_list.length > 0) {\r",
									"        jsonData.student_list.forEach(function (student) {\r",
									"            pm.expect(student).to.have.property('student_attendance_record_id');\r",
									"            pm.expect(student).to.have.property('user_code');\r",
									"            pm.expect(student).to.have.property('first_name');\r",
									"            pm.expect(student).to.have.property('last_name');\r",
									"            pm.expect(student).to.have.property('mobile_number');\r",
									"            pm.expect(student).to.have.property('room_main_id');\r",
									"            pm.expect(student).to.have.property('room_name');\r",
									"            pm.expect(student).to.have.property('photo');\r",
									"        });\r",
									"    }\r",
									"});\r",
									"\r",
									"// Test if filter and attendance_detail_id parameters are provided\r",
									"pm.test(\"filter and attendance_detail_id parameters should be provided\", function () {\r",
									"    var formData = pm.request.body.formdata;\r",
									"\r",
									"    var filterFound = false;\r",
									"    var attendanceDetailIdFound = false;\r",
									"\r",
									"    formData.each(function (param) {\r",
									"        if (param.key === \"filter\" && param.value) {\r",
									"            filterFound = true;\r",
									"        }\r",
									"        if (param.key === \"attendance_detail_id\" && param.value) {\r",
									"            attendanceDetailIdFound = true;\r",
									"        }\r",
									"    });\r",
									"\r",
									"    pm.expect(filterFound).to.be.true;\r",
									"    pm.expect(attendanceDetailIdFound).to.be.true;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "filter",
									"value": "M",
									"type": "text"
								},
								{
									"key": "attendance_detail_id",
									"value": "67",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}attendance/manager_student_status_list_r.php",
							"host": [
								"{{path}}attendance"
							],
							"path": [
								"manager_student_status_list_r.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_student_active_leave_list_ru",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set the environment variables\r",
									"pm.environment.set(\"user_role\", \"manager\"); // Change this according to your test case\r",
									"pm.environment.set(\"hostel_code\", \"your_hostel_code_here\"); // Change this according to your test case\r",
									"\r",
									"// Mocking the $_SERVER['REQUEST_METHOD']\r",
									"pm.request.method = 'GET';\r",
									"\r",
									"// Setting up the parameters for the GET request\r",
									"pm.request.url = pm.variables.replaceIn(\"{{path}}attendance/manager_student_active_leave_list_ru.php?flag=total\"); // Change the flag parameter as needed\r",
									"\r",
									"// Execute the request\r",
									"pm.sendRequest(function (err, res) {\r",
									"    if (err) {\r",
									"        console.log(err);\r",
									"    } else {\r",
									"        console.log(res.json());\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Test that the status field is true\r",
									"pm.test(\"Status is true\", function () {\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"\r",
									"// Test that the message field is \"User List\"\r",
									"pm.test(\"Message is User List\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"User List\");\r",
									"});\r",
									"\r",
									"// Test that the data field is an array\r",
									"pm.test(\"Data is an array\", function () {\r",
									"    pm.expect(jsonData.data).to.be.an('array');\r",
									"});\r",
									"\r",
									"// Test that the data array is not empty\r",
									"pm.test(\"Data array is not empty\", function () {\r",
									"    pm.expect(jsonData.data.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"// Additional checks for the structure of the first element in the data array\r",
									"pm.test(\"First element in data array has correct structure\", function () {\r",
									"    var firstElement = jsonData.data[0];\r",
									"    pm.expect(firstElement).to.have.property('photo');\r",
									"    pm.expect(firstElement).to.have.property('user_code');\r",
									"    pm.expect(firstElement).to.have.property('first_name');\r",
									"    pm.expect(firstElement).to.have.property('last_name');\r",
									"    pm.expect(firstElement).to.have.property('room_main_id');\r",
									"    pm.expect(firstElement).to.have.property('room_name');\r",
									"    pm.expect(firstElement).to.have.property('mobile_number');\r",
									"});\r",
									"\r",
									"// Test if flag parameter is provided\r",
									"pm.test(\"flag parameter should be provided\", function () {\r",
									"    var flagValue = pm.request.url.query.get('flag');\r",
									"    if (!flagValue) {\r",
									"        pm.expect.fail(\"flag parameter is missing\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}attendance/manager_student_active_leave_list_ru.php?flag=total",
							"host": [
								"{{path}}attendance"
							],
							"path": [
								"manager_student_active_leave_list_ru.php"
							],
							"query": [
								{
									"key": "flag",
									"value": "total"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_student_active_leave_list_ru",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Test that the status field is true\r",
									"pm.test(\"Status is true\", function () {\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"\r",
									"// Test that the message field is \"User List\"\r",
									"pm.test(\"Message is User List\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"User List\");\r",
									"});\r",
									"\r",
									"// Test that the data field is an array\r",
									"pm.test(\"Data is an array\", function () {\r",
									"    pm.expect(jsonData.data).to.be.an('array');\r",
									"});\r",
									"\r",
									"// Test that the data array is not empty\r",
									"pm.test(\"Data array is not empty\", function () {\r",
									"    pm.expect(jsonData.data.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"// Additional checks for the structure of the first element in the data array\r",
									"pm.test(\"First element in data array has correct structure\", function () {\r",
									"    var firstElement = jsonData.data[0];\r",
									"    pm.expect(firstElement).to.have.property('TOTAL');\r",
									"    pm.expect(firstElement).to.have.property('IN');\r",
									"    pm.expect(firstElement).to.have.property('OUT');\r",
									"    pm.expect(firstElement).to.have.property('MISSING');\r",
									"});\r",
									"\r",
									"// Test case to check presence and value of parameters in request body\r",
									"pm.test(\"Request body contains updated_status and student_attendance_record_id\", function () {\r",
									"    var requestBody = pm.request.body.raw.trim();\r",
									"    console.log(\"Trimmed request body:\", requestBody); // Log trimmed body\r",
									"\r",
									"    if (requestBody !== '') {\r",
									"        try {\r",
									"            var parsedRequestBody = JSON.parse(requestBody);\r",
									"            console.log(\"Parsed request body:\", parsedRequestBody); // Log parsed body\r",
									"\r",
									"            pm.expect(parsedRequestBody).to.have.property('updated_status');\r",
									"            pm.expect(parsedRequestBody.updated_status).to.not.be.undefined;\r",
									"            pm.expect(parsedRequestBody.updated_status).to.not.be.null;\r",
									"\r",
									"            pm.expect(parsedRequestBody).to.have.property('student_attendance_record_id');\r",
									"            pm.expect(parsedRequestBody.student_attendance_record_id).to.not.be.undefined;\r",
									"            pm.expect(parsedRequestBody.student_attendance_record_id).to.not.be.null;\r",
									"        } catch (e) {\r",
									"            console.log(\"Error parsing JSON:\", e.message); // Log parsing error\r",
									"            pm.expect.fail(\"Invalid JSON format in the request body\");\r",
									"        }\r",
									"    } else {\r",
									"        pm.expect.fail(\"Request body is empty\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set the environment variables\r",
									"pm.environment.set(\"user_role\", \"manager\"); // Change this according to your test case\r",
									"pm.environment.set(\"hostel_code\", \"your_hostel_code_here\"); // Change this according to your test case\r",
									"\r",
									"// Mocking the $_SERVER['REQUEST_METHOD']\r",
									"pm.request.method = 'PUT';\r",
									"\r",
									"// Set up the request body\r",
									"var requestBody = {\r",
									"    \"updated_status\": \"O\", // Change the updated_status value as needed\r",
									"    \"student_attendance_record_id\": 2 // Change the student_attendance_record_id value as needed\r",
									"};\r",
									"\r",
									"// Since pm.request.body.json is not valid, use the correct approach to set the request body\r",
									"pm.request.body = {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify(requestBody)\r",
									"};\r",
									"\r",
									"// Set Content-Type header to application/json\r",
									"pm.request.headers.upsert({ key: \"Content-Type\", value: \"application/json\" });\r",
									"\r",
									"// You don't need to send the request manually in the pre-request script; Postman handles it when you click Send.\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"updated_status\":\"M\",\r\n    \"student_attendance_record_id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}attendance/manager_student_active_leave_list_ru.php",
							"host": [
								"{{path}}attendance"
							],
							"path": [
								"manager_student_active_leave_list_ru.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "complaint",
			"item": [
				{
					"name": "manager_complaint_status_u",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Parameters are provided with values in the request body\", function () {\r",
									"    var requestBody = pm.request.body.raw.trim();\r",
									"    if (requestBody !== '') {\r",
									"        try {\r",
									"            var parsedRequestBody = JSON.parse(requestBody);\r",
									"            pm.expect(parsedRequestBody).to.have.property('complaint_record_id');\r",
									"            pm.expect(parsedRequestBody.complaint_record_id).to.not.be.undefined;\r",
									"            pm.expect(parsedRequestBody.complaint_record_id).to.not.be.null;\r",
									"            pm.expect(parsedRequestBody).to.have.property('status');\r",
									"            pm.expect(parsedRequestBody.status).to.not.be.undefined;\r",
									"            pm.expect(parsedRequestBody.status).to.not.be.null;\r",
									"            pm.expect(parsedRequestBody).to.have.property('reject_reason');\r",
									"            pm.expect(parsedRequestBody.reject_reason).to.not.be.undefined;\r",
									"            pm.expect(parsedRequestBody.reject_reason).to.not.be.null;\r",
									"            pm.expect(parsedRequestBody).to.have.property('manager_forward');\r",
									"            pm.expect(parsedRequestBody.manager_forward).to.not.be.undefined;\r",
									"            pm.expect(parsedRequestBody.manager_forward).to.not.be.null;\r",
									"            pm.expect(parsedRequestBody).to.have.property('staffadmin_forward');\r",
									"            pm.expect(parsedRequestBody.staffadmin_forward).to.not.be.undefined;\r",
									"            pm.expect(parsedRequestBody.staffadmin_forward).to.not.be.null;\r",
									"        } catch (e) {\r",
									"            pm.expect.fail(\"Invalid JSON format in the request body\");\r",
									"        }\r",
									"    } else {\r",
									"        pm.expect.fail(\"Request body is empty\");\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Complaint forwarded to Staff Admin\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"    pm.expect(jsonData.message).to.eql(\"Complaint is forwarded to Staff Admin\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set the environment variables\r",
									"pm.environment.set(\"user_role\", \"manager\"); // or \"rector\" or \"staff\" based on your test case\r",
									"pm.environment.set(\"hostel_code\", \"your_hostel_code_here\"); // Set your hostel code\r",
									"pm.environment.set(\"user_code\", \"your_user_code_here\"); // Set your user code\r",
									"\r",
									"// Mocking the $_SERVER['REQUEST_METHOD']\r",
									"pm.request.method = 'PUT';\r",
									"\r",
									"// Set up the request body\r",
									"var requestBody = {\r",
									"    \"complaint_record_id\": 1, // Change the complaint_record_id value as needed\r",
									"    \"status\": \"P\", // or \"C\" based on your test case\r",
									"    \"reject_reason\": \"Reason for rejection\", // Optional, only needed if status is 'R'\r",
									"    \"manager_forward\": \"Y\", // or \"N\" based on your test case\r",
									"    \"staffadmin_forward\": \"Y\", // or \"N\" based on your test case\r",
									"    \"user_code\": \"staff_user_code_here\" // Set the user code for staff if needed\r",
									"};\r",
									"\r",
									"// Set the request body in raw JSON format\r",
									"pm.request.body.raw = JSON.stringify(requestBody);\r",
									"\r",
									"// Set Content-Type header to application/json\r",
									"pm.request.headers.upsert({ key: \"Content-Type\", value: \"application/json\" });\r",
									"\r",
									"// You don't need to send the request manually in the pre-request script; Postman handles it when you click Send.\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"complaint_record_id\": 6,\r\n    \"status\": \"R\",\r\n    \"comment\": \"\",\r\n    \"manager_forward\": \"Y\",\r\n    \"staffadmin_forward\": \"Y\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}complaint/manager_complaint_status_u.php",
							"host": [
								"{{path}}complaint"
							],
							"path": [
								"manager_complaint_status_u.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_complaint_type_listview",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set the environment variables\r",
									"pm.environment.set(\"user_role\", \"student\"); // or \"manager\" or \"rector\" or \"staff\" based on your test case\r",
									"pm.environment.set(\"hostel_code\", \"your_hostel_code_here\"); // Set your hostel code\r",
									"pm.environment.set(\"user_code\", \"your_user_code_here\"); // Set your user code\r",
									"\r",
									"// Mocking the $_SERVER['REQUEST_METHOD']\r",
									"pm.request.method = 'GET';\r",
									"\r",
									"// You don't need to set a request body for a GET request, but ensure headers are correct\r",
									"pm.request.headers.upsert({ key: \"Content-Type\", value: \"application/json\" });\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if the status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Check if the response is JSON\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"// Parse the JSON response\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Check if the status in response is true\r",
									"pm.test(\"Status should be true\", function () {\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"\r",
									"// Check if the message is present and contains the expected string\r",
									"pm.test(\"Message should indicate complaint types list\", function () {\r",
									"    pm.expect(jsonData.message).to.include(\"Complaint types list\");\r",
									"});\r",
									"\r",
									"// Check if the data field is an array\r",
									"pm.test(\"Data field should be an array\", function () {\r",
									"    pm.expect(jsonData.data).to.be.an('array');\r",
									"});\r",
									"\r",
									"// Check if each item in the data array contains the expected fields\r",
									"pm.test(\"Each item in data array should contain required fields\", function () {\r",
									"    jsonData.data.forEach(function(item) {\r",
									"        pm.expect(item).to.have.property('complaint_main_id');\r",
									"        pm.expect(item).to.have.property('name');\r",
									"        pm.expect(item).to.have.property('value');\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}complaint/student_complaint_type_listview_r.php",
							"host": [
								"{{path}}complaint"
							],
							"path": [
								"student_complaint_type_listview_r.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "ms_complaint_crud",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set the environment variables\r",
									"pm.environment.set(\"user_role\", \"student\"); // or \"manager\" or \"rector\" or \"staff\" based on your test case\r",
									"pm.environment.set(\"hostel_code\", \"your_hostel_code_here\"); // Set your hostel code\r",
									"pm.environment.set(\"user_code\", \"your_user_code_here\"); // Set your user code\r",
									"\r",
									"// Mocking the $_SERVER['REQUEST_METHOD']\r",
									"pm.request.method = 'POST';\r",
									"\r",
									"// Set necessary request headers\r",
									"pm.request.headers.upsert({ key: \"Content-Type\", value: \"application/form-data\" });\r",
									"\r",
									"// Set the request body\r",
									"pm.request.body.urlencoded = [\r",
									"    { key: \"complaint_title\", value: \"Test Complaint\" },\r",
									"    { key: \"description\", value: \"Test description\" },\r",
									"    { key: \"complaint_main_id\", value: \"1\" },\r",
									"    // Add more key-value pairs as needed based on your test case\r",
									"];\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if the status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Check if the response is JSON\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"// Parse the JSON response\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Check if the status in response is true\r",
									"pm.test(\"Status should be true\", function () {\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"\r",
									"// Check if the message is present and contains the expected string\r",
									"pm.test(\"Message should indicate successful registration\", function () {\r",
									"    pm.expect(jsonData.message).to.include(\"Your Complaint has been Registered Successfully\");\r",
									"});\r",
									"\r",
									"// Check if the ad_unit_id field is present and not empty\r",
									"pm.test(\"ad_unit_id should be present and not empty\", function () {\r",
									"    pm.expect(jsonData).to.have.property('ad_unit_id');\r",
									"    pm.expect(jsonData.ad_unit_id).to.not.be.empty;\r",
									"});\r",
									"\r",
									"// Check if the advertisement field is present and is either \"Y\" or \"N\"\r",
									"pm.test(\"advertisement should be present and be either 'Y' or 'N'\", function () {\r",
									"    pm.expect(jsonData).to.have.property('advertisement');\r",
									"    pm.expect(jsonData.advertisement).to.be.oneOf(['Y', 'N']);\r",
									"});\r",
									"\r",
									"// Test if complaint_title, description, complaint_main_id, and branch_building_main_id are provided in form-data with values\r",
									"pm.test(\"complaint_title, description, complaint_main_id, and branch_building_main_id should be provided in form-data with values\", function () {\r",
									"    var formData = pm.request.body.formdata;\r",
									"\r",
									"    var complaintTitleFound = false;\r",
									"    var descriptionFound = false;\r",
									"    var complaintMainIdFound = false;\r",
									"    var branchBuildingMainIdFound = false;\r",
									"\r",
									"    formData.each(function (param) {\r",
									"        if (param.key === \"complaint_title\" && param.value) {\r",
									"            complaintTitleFound = true;\r",
									"        }\r",
									"        if (param.key === \"description\" && param.value) {\r",
									"            descriptionFound = true;\r",
									"        }\r",
									"        if (param.key === \"complaint_main_id\" && param.value) {\r",
									"            complaintMainIdFound = true;\r",
									"        }\r",
									"        if (param.key === \"branch_building_main_id\" && param.value) {\r",
									"            branchBuildingMainIdFound = true;\r",
									"        }\r",
									"    });\r",
									"\r",
									"    pm.expect(complaintTitleFound).to.be.true;\r",
									"    pm.expect(descriptionFound).to.be.true;\r",
									"    pm.expect(complaintMainIdFound).to.be.true;\r",
									"    pm.expect(branchBuildingMainIdFound).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "complaint_title",
									"value": "technical",
									"type": "text"
								},
								{
									"key": "description",
									"value": "technic",
									"type": "text"
								},
								{
									"key": "complaint_main_id",
									"value": "3",
									"type": "text"
								},
								{
									"key": "branch_building_main_id",
									"value": "2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}complaint/ms_complaint_crud.php",
							"host": [
								"{{path}}complaint"
							],
							"path": [
								"ms_complaint_crud.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "ms_complaint_crud",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Define sample data\r",
									"var sampleData = {\r",
									"    name: \"John Doe\",\r",
									"    age: 30,\r",
									"    email: \"john.doe@example.com\"\r",
									"};\r",
									"\r",
									"// Set the sample data as environment variables\r",
									"pm.environment.set(\"sampleName\", sampleData.name);\r",
									"pm.environment.set(\"sampleAge\", sampleData.age);\r",
									"pm.environment.set(\"sampleEmail\", sampleData.email);\r",
									"\r",
									"// Log the sample data\r",
									"console.log(\"Sample data set in environment variables:\");\r",
									"console.log(\"Name: \" + pm.environment.get(\"sampleName\"));\r",
									"console.log(\"Age: \" + pm.environment.get(\"sampleAge\"));\r",
									"console.log(\"Email: \" + pm.environment.get(\"sampleEmail\"));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}complaint/ms_complaint_crud.php",
							"host": [
								"{{path}}complaint"
							],
							"path": [
								"ms_complaint_crud.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "ms_complaint_crud",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set user role\r",
									"pm.environment.set(\"userRole\", \"student\"); // Change this to \"manager\" or \"rector\" for different scenarios\r",
									"\r",
									"// Set request method\r",
									"pm.environment.set(\"requestMethod\", \"PUT\"); // Change this to \"DELETE\" for another scenario\r",
									"\r",
									"// Set sample complaint record ID\r",
									"pm.environment.set(\"complaintRecordId\", 123); // Change this to a valid complaint record ID\r",
									"\r",
									"// Set sample data for complaint update\r",
									"pm.environment.set(\"complaintTitle\", \"Updated Title\");\r",
									"pm.environment.set(\"complaintDescription\", \"Updated Description\");\r",
									"pm.environment.set(\"managerForward\", \"Y\");\r",
									"pm.environment.set(\"staffAdminForward\", \"N\"); // Change this to \"Y\" for different scenarios\r",
									"\r",
									"// Log the pre-request setup\r",
									"console.log(\"Pre-request setup:\");\r",
									"console.log(\"User Role: \" + pm.environment.get(\"userRole\"));\r",
									"console.log(\"Request Method: \" + pm.environment.get(\"requestMethod\"));\r",
									"console.log(\"Complaint Record ID: \" + pm.environment.get(\"complaintRecordId\"));\r",
									"console.log(\"Complaint Title: \" + pm.environment.get(\"complaintTitle\"));\r",
									"console.log(\"Complaint Description: \" + pm.environment.get(\"complaintDescription\"));\r",
									"console.log(\"Manager Forward: \" + pm.environment.get(\"managerForward\"));\r",
									"console.log(\"Staff Admin Forward: \" + pm.environment.get(\"staffAdminForward\"));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"// Test that the message field is present\r",
									"pm.test(\"Message field exists\", function () {\r",
									"    pm.expect(jsonData).to.have.property('message');\r",
									"});\r",
									"\r",
									"// Test that the response contains the expected data structure for each method\r",
									"    // PUT Method Tests\r",
									"    pm.test(\"PUT Method Tests\", function () {\r",
									"        // Check if the message is \"Your Complaint is Updated Successfully\" when status is true\r",
									"        if (jsonData.status === true) {\r",
									"            pm.expect(jsonData.message).to.eql(\"Your Complaint is Updated Successfully\");\r",
									"            pm.expect(jsonData).to.have.property('data');\r",
									"        } else {\r",
									"            pm.expect(jsonData.message).to.eql(\"not able to update\");\r",
									"        }\r",
									"    });\r",
									"\r",
									"// Test case to check presence and value of parameters in request body\r",
									"pm.test(\"Parameters are provided with values in the request body\", function () {\r",
									"    var requestBody = pm.request.body.raw.trim();\r",
									"    if (requestBody !== '') {\r",
									"        try {\r",
									"            var parsedRequestBody = JSON.parse(requestBody);\r",
									"            pm.expect(parsedRequestBody).to.have.property('complaint_record_id');\r",
									"            pm.expect(parsedRequestBody.complaint_record_id).to.not.be.undefined;\r",
									"            pm.expect(parsedRequestBody.complaint_record_id).to.not.be.null;\r",
									"            pm.expect(parsedRequestBody).to.have.property('complaint_title');\r",
									"            pm.expect(parsedRequestBody.complaint_title).to.not.be.undefined;\r",
									"            pm.expect(parsedRequestBody.complaint_title).to.not.be.null;\r",
									"            pm.expect(parsedRequestBody).to.have.property('description');\r",
									"            pm.expect(parsedRequestBody.description).to.not.be.undefined;\r",
									"            pm.expect(parsedRequestBody.description).to.not.be.null;\r",
									"            pm.expect(parsedRequestBody).to.have.property('manager_forward');\r",
									"            pm.expect(parsedRequestBody.manager_forward).to.not.be.undefined;\r",
									"            pm.expect(parsedRequestBody.manager_forward).to.not.be.null;\r",
									"            pm.expect(parsedRequestBody).to.have.property('staffadmin_forward');\r",
									"            pm.expect(parsedRequestBody.staffadmin_forward).to.not.be.undefined;\r",
									"            pm.expect(parsedRequestBody.staffadmin_forward).to.not.be.null;\r",
									"            // Add additional checks for the type and value if needed\r",
									"        } catch (e) {\r",
									"            pm.expect.fail(\"Invalid JSON format in the request body\");\r",
									"        }\r",
									"    } else {\r",
									"        pm.expect.fail(\"Request body is empty\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"complaint_record_id\": 1,\r\n    \"complaint_title\": \"Technical\",\r\n    \"description\": \"Technical Problem\",\r\n    \"manager_forward\": \"A\",\r\n    \"staffadmin_forward\": \"A\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}complaint/ms_complaint_crud.php",
							"host": [
								"{{path}}complaint"
							],
							"path": [
								"ms_complaint_crud.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "ms_complaint_crud",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Define variables\r",
									"var userRole = pm.environment.get(\"user_role\"); // Assuming user_role is stored in an environment variable\r",
									"var currentDateTime = new Date().toISOString(); // Get current date and time in ISO format\r",
									"\r",
									"// Check if user role is student, manager, or rector\r",
									"if (userRole === \"student\" || userRole === \"manager\" || userRole === \"rector\") {\r",
									"    // Set request method to PUT or DELETE\r",
									"    pm.request.method = pm.request.method.toUpperCase();\r",
									"\r",
									"if (pm.request.method === \"DELETE\") {\r",
									"            // Add any specific headers or parameters needed for DELETE method\r",
									"            pm.request.headers.add({ key: \"Authorization\", value: \"Bearer \" + pm.environment.get(\"access_token\") });\r",
									"\r",
									"            // Set the body with complaint_record_id\r",
									"            pm.request.body.raw = JSON.stringify({\r",
									"                \"complaint_record_id\": 1\r",
									"            });\r",
									"        }\r",
									"\r",
									"    // Log pre-request details\r",
									"    console.log(\"Pre-request script executed successfully.\");\r",
									"    console.log(\"User role:\", userRole);\r",
									"    console.log(\"Current date and time:\", currentDateTime);\r",
									"} \r",
									"else {\r",
									"    console.log(\"Invalid user role:\", userRole);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"// Test that the message field exists\r",
									"pm.test(\"Message field exists\", function () {\r",
									"    pm.expect(jsonData).to.have.property('message');\r",
									"});\r",
									"\r",
									"pm.test(\"DELETE Method Tests\", function () {\r",
									"        // Check if the message is \"Your Complaint is Deleted Successfully\" when status is true\r",
									"        if (jsonData.status === true) {\r",
									"            pm.expect(jsonData.message).to.eql(\"Your Complaint is Deleted Successfully\");\r",
									"        } else {\r",
									"            pm.expect(jsonData.message).to.eql(\"not able to delete\");\r",
									"        }\r",
									"    });\r",
									"    // Test case for presence and value of complaint_record_id parameter\r",
									"// Test case for presence and value of complaint_record_id parameter\r",
									"pm.test(\"complaint_record_id parameter is provided with a value\", function () {\r",
									"    var requestBody = pm.request.body.raw.trim();\r",
									"    if (requestBody !== '') {\r",
									"        try {\r",
									"            var parsedRequestBody = JSON.parse(requestBody);\r",
									"            pm.expect(parsedRequestBody).to.have.property('complaint_record_id');\r",
									"            pm.expect(parsedRequestBody.complaint_record_id).to.not.be.undefined;\r",
									"            pm.expect(parsedRequestBody.complaint_record_id).to.not.be.null;\r",
									"            // Add additional checks for the type and value if needed\r",
									"        } catch (e) {\r",
									"            pm.expect.fail(\"Invalid JSON format in the request body\");\r",
									"        }\r",
									"    } else {\r",
									"        pm.expect.fail(\"Request body is empty\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"complaint_record_id\": 8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}complaint/ms_complaint_crud.php",
							"host": [
								"{{path}}complaint"
							],
							"path": [
								"ms_complaint_crud.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "staffadmin_complaint_staff_list_r",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Set the `complaint_record_id` query parameter\r",
									"pm.request.url.query.add({\r",
									"    key: \"complaint_record_id\",\r",
									"    value: \"1\"  // Set the value of complaint_record_id here\r",
									"});\r",
									"\r",
									"// If any specific headers are needed, set them\r",
									"pm.request.headers.add({\r",
									"    key: \"Authorization\",\r",
									"    value: \"Bearer \" + pm.environment.get(\"access_token\")  // Ensure the access token is stored in environment variables\r",
									"});\r",
									"\r",
									"// Log the current request details for debugging\r",
									"console.log(\"Pre-request script executed successfully.\");\r",
									"console.log(\"Request URL:\", pm.request.url.toString());\r",
									"console.log(\"Query Parameters:\", pm.request.url.query.toObject());\r",
									"console.log(\"Headers:\", pm.request.headers.toObject());\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Test that the status field is true\r",
									"pm.test(\"Status is true\", function () {\r",
									"    pm.expect(jsonData.status).to.eql(true);\r",
									"});\r",
									"\r",
									"// Test that the message field exists\r",
									"pm.test(\"Message field exists\", function () {\r",
									"    pm.expect(jsonData).to.have.property('message');\r",
									"});\r",
									"\r",
									"// Test that the data field exists\r",
									"pm.test(\"Data field exists\", function () {\r",
									"    pm.expect(jsonData).to.have.property('data');\r",
									"});\r",
									"\r",
									"// Test for the length of the data array\r",
									"pm.test(\"Data array length is correct\", function () {\r",
									"    pm.expect(jsonData.data).to.be.an('array').with.lengthOf.at.least(1);\r",
									"});\r",
									"\r",
									"// Test for the presence and value of complaint_record_id parameter\r",
									"pm.test(\"complaint_record_id parameter exists and has a value\", function () {\r",
									"    // Get request parameters\r",
									"    var requestParams = pm.request.url.query;\r",
									"\r",
									"    // Check if complaint_record_id parameter exists\r",
									"    pm.expect(requestParams).to.have.property(\"complaint_record_id\");\r",
									"\r",
									"    // Check if complaint_record_id parameter has a value\r",
									"    var complaintRecordIdValue = requestParams.get(\"complaint_record_id\");\r",
									"    pm.expect(complaintRecordIdValue).to.not.be.null;\r",
									"    pm.expect(complaintRecordIdValue).to.not.be.undefined;\r",
									"    pm.expect(complaintRecordIdValue).to.not.be.empty;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{path}}complaint/staffadmin_complaint_staff_list_r.php?complaint_record_id=65",
							"host": [
								"{{path}}complaint"
							],
							"path": [
								"staffadmin_complaint_staff_list_r.php"
							],
							"query": [
								{
									"key": "complaint_record_id",
									"value": "65"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "dashboard",
			"item": [
				{
					"name": "counsellor_dashboard",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "app_type",
									"value": "W",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{local_path}}dashbord/counsellor_dashbord.php",
							"host": [
								"{{local_path}}dashbord"
							],
							"path": [
								"counsellor_dashbord.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_dashboard",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "app_type",
									"value": "W",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{local_path}}dashboard/manager_dashboard.php",
							"host": [
								"{{local_path}}dashboard"
							],
							"path": [
								"manager_dashboard.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "missing_info_indication",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{path}}dashboard/missing_info_indication.php",
							"host": [
								"{{path}}dashboard"
							],
							"path": [
								"missing_info_indication.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "parent_dashboard",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "app_type",
									"value": "W",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}dashboard/parent_dashboard.php",
							"host": [
								"{{path}}dashboard"
							],
							"path": [
								"parent_dashboard.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "staff_dashboard",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "app_type",
									"value": "W",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}dashbord/staff_dashbord.php",
							"host": [
								"{{path}}dashbord"
							],
							"path": [
								"staff_dashbord.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_dashboard",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "app_type",
									"value": "W",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}dashbord/student_dashbord.php",
							"host": [
								"{{path}}dashbord"
							],
							"path": [
								"student_dashbord.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "sc_college_department_insert_update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "college_main_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "department_main_id",
									"value": "3",
									"type": "text"
								},
								{
									"key": "college_enrollment_id",
									"value": "42",
									"type": "text"
								},
								{
									"key": "flag",
									"value": "Update",
									"type": "text"
								},
								{
									"key": "student_user_code",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}dashboard/sc_college_department_insert_update.php",
							"host": [
								"{{path}}dashboard"
							],
							"path": [
								"sc_college_department_insert_update.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "admin_dashboard",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "app_type",
									"value": "W",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}dashbord/admin_dashbord.php",
							"host": [
								"{{path}}dashbord"
							],
							"path": [
								"admin_dashbord.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "fees",
			"item": [
				{
					"name": "manager_receipt_cr",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}fees/manager_receipt_cr.php?fees_record_id=12",
							"host": [
								"{{path}}fees"
							],
							"path": [
								"manager_receipt_cr.php"
							],
							"query": [
								{
									"key": "fees_record_id",
									"value": "12"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_receipt_cr",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "payment_date",
									"value": "2024-04-08 12:00:00",
									"type": "text"
								},
								{
									"key": "amount_paid",
									"value": "50",
									"type": "text"
								},
								{
									"key": "pay_via",
									"value": "CHEQUE",
									"type": "text"
								},
								{
									"key": "cheque_upi_person",
									"value": "123456",
									"type": "text"
								},
								{
									"key": "title",
									"value": "glexas1",
									"type": "text"
								},
								{
									"key": "from_date",
									"value": "2023-05-08",
									"type": "text",
									"disabled": true
								},
								{
									"key": "to_date",
									"value": "2023-05-08",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fees_record_id",
									"value": "12",
									"type": "text"
								},
								{
									"key": "cheque_date",
									"value": "2024-04-08",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}fees/manager_receipt_cr.php",
							"host": [
								"{{path}}fees"
							],
							"path": [
								"manager_receipt_cr.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_term_cr",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "term_title",
									"value": "uhfknacsn",
									"type": "text"
								},
								{
									"key": "fees_data",
									"value": "[{\"user_code\": \"Student1\",\"student_fees\": 1000},{\"user_code\": \"Student2\",\"student_fees\": 2000},{\"user_code\": \"Student3\",\"student_fees\": 3000}]",
									"type": "text"
								},
								{
									"key": "fees_sdate",
									"value": "2022-01-15",
									"type": "text"
								},
								{
									"key": "fees_edate",
									"value": "2022-05-15",
									"type": "text"
								},
								{
									"key": "total_fees",
									"value": "1000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://glexas.com/hostel_data/API/fees/manager_term_cr.php",
							"protocol": "https",
							"host": [
								"glexas",
								"com"
							],
							"path": [
								"hostel_data",
								"API",
								"fees",
								"manager_term_cr.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_term_cr",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "https://glexas.com/hostel_data/API/fees/manager_term_cr.php",
							"protocol": "https",
							"host": [
								"glexas",
								"com"
							],
							"path": [
								"hostel_data",
								"API",
								"fees",
								"manager_term_cr.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_term_student_crud",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fees_detail_id\": 1,\r\n    \"user_code\": \"Student\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}fees/manager_term_student_crud.php",
							"host": [
								"{{path}}fees"
							],
							"path": [
								"manager_term_student_crud.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_term_student_crud",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "fees_detail_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "user_code",
									"value": "Student",
									"type": "text"
								},
								{
									"key": "fees_sdate",
									"value": "2024-05-13",
									"type": "text"
								},
								{
									"key": "fees_edate",
									"value": "2024-09-13",
									"type": "text"
								},
								{
									"key": "total_fees",
									"value": "10000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}fees/manager_term_student_crud.php",
							"host": [
								"{{path}}fees"
							],
							"path": [
								"manager_term_student_crud.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_term_student_crud",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{path}}fees/manager_term_student_crud.php?fees_detail_id=1",
							"host": [
								"{{path}}fees"
							],
							"path": [
								"manager_term_student_crud.php"
							],
							"query": [
								{
									"key": "fees_detail_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_term_student_crud",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fees_detail_id\": 1,\r\n    \"user_code\": \"Student\",\r\n    \"fees_sdate\": \"2024-05-13\",\r\n    \"fees_edate\": \"2024-09-13\",\r\n    \"total_fees\": 10000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}fees/manager_term_student_crud.php",
							"host": [
								"{{path}}fees"
							],
							"path": [
								"manager_term_student_crud.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "msp_student_term_list_r",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}fees/msp_student_term_list_r.php",
							"host": [
								"{{path}}fees"
							],
							"path": [
								"msp_student_term_list_r.php"
							],
							"query": [
								{
									"key": "user_code",
									"value": "Student2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_cheque_ru",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}fees/manager_cheque_ru.php",
							"host": [
								"{{path}}fees"
							],
							"path": [
								"manager_cheque_ru.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_cheque_ru",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"transaction_record_id\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}fees/manager_cheque_ru.php",
							"host": [
								"{{path}}fees"
							],
							"path": [
								"manager_cheque_ru.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "food",
			"item": [
				{
					"name": "manager_food_count_add_delete",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "meal_type",
									"value": "D",
									"type": "text"
								},
								{
									"key": "date",
									"value": "2023-05-15",
									"type": "text"
								},
								{
									"key": "option",
									"value": "N",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}food/manager_food_count_add_delete.php",
							"host": [
								"{{path}}food"
							],
							"path": [
								"manager_food_count_add_delete.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_temp_food_menu_add_update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "flag",
									"value": "Delete",
									"type": "text"
								},
								{
									"key": "day_name",
									"value": "2023-05-04",
									"type": "text"
								},
								{
									"key": "menu",
									"value": "butter masala 2",
									"type": "text"
								},
								{
									"key": "meal_time",
									"value": "L",
									"type": "text"
								},
								{
									"key": "food_menu_change_main_id",
									"value": "63",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}food/manager_temp_food_menu_add_update.php",
							"host": [
								"{{path}}food"
							],
							"path": [
								"manager_temp_food_menu_add_update.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_food_feedback",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "day_name",
									"value": "4",
									"type": "text"
								},
								{
									"key": "meal_type",
									"value": "L",
									"type": "text"
								},
								{
									"key": "review",
									"value": "4",
									"type": "text"
								},
								{
									"key": "comment",
									"value": "Nice",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}food/student_food_feedback.php",
							"host": [
								"{{path}}food"
							],
							"path": [
								"student_food_feedback.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_food_menu_view",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "date",
									"value": "2023-05-20",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}food/student_food_menu_view.php",
							"host": [
								"{{path}}food"
							],
							"path": [
								"student_food_menu_view.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_student_food_count",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "date",
									"value": "2023-05-16",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}food/manager_student_food_count.php",
							"host": [
								"{{path}}food"
							],
							"path": [
								"manager_student_food_count.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_food_menu_view",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}food/manager_food_menu_view.php",
							"host": [
								"{{path}}food"
							],
							"path": [
								"manager_food_menu_view.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_food_menu_main_add_update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "flag",
									"value": "Add",
									"type": "text"
								},
								{
									"key": "day_name",
									"value": "Monday",
									"type": "text"
								},
								{
									"key": "breakfast",
									"value": "abcd",
									"type": "text"
								},
								{
									"key": "lunch",
									"value": "efgh",
									"type": "text"
								},
								{
									"key": "dinner",
									"value": "ijkl",
									"type": "text"
								},
								{
									"key": "food_menu_main_id",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "Update",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}food/manager_food_menu_main_add_update.php",
							"host": [
								"{{path}}food"
							],
							"path": [
								"manager_food_menu_main_add_update.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_staff_qr_insert.php",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "day_name",
									"value": "2023-05-15",
									"type": "text"
								},
								{
									"key": "meal_type",
									"value": "L",
									"type": "text"
								},
								{
									"key": "user_code",
									"value": "Student11",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}food/student_staff_qr_insert.php",
							"host": [
								"{{path}}food"
							],
							"path": [
								"student_staff_qr_insert.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_food_count_add_delete.php",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "meal_type",
									"value": "D",
									"type": "text"
								},
								{
									"key": "date",
									"value": "2023-05-11",
									"type": "text"
								},
								{
									"key": "option",
									"value": "Y",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}food/student_food_count_add_delete.php",
							"host": [
								"{{path}}food"
							],
							"path": [
								"student_food_count_add_delete.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "general",
			"item": [
				{
					"name": "sidebar.php",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "app_type",
									"value": "F",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}general/sidebar.php",
							"host": [
								"{{path}}general"
							],
							"path": [
								"sidebar.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "user_info_sidebar.php",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{path}}general/user_info_sidebar.php",
							"host": [
								"{{path}}general"
							],
							"path": [
								"user_info_sidebar.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "hostel_info.php",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{path}}general/hostel_info.php",
							"host": [
								"{{path}}general"
							],
							"path": [
								"hostel_info.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "parameter.php",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "flag",
									"value": "mobile_number",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "otp_flag",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "registration_image_path",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "food_menu_type",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "complaint_complaint_edit_time",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "complaint_staff_view_flag",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "security_leave_location",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "fees_duration",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "fees_breakup",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "fees_startdate",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "fees_monthbreak",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "food_food_count_duration",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "security_parent_leave_location",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "security_counsellor_leave_location",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "security_manager_leave_location",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "skip_captcha",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "location",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}general/parameter.php",
							"host": [
								"{{path}}general"
							],
							"path": [
								"parameter.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "hostel_info_detail",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IlJhaiBaYWxhdmFkaXlhIiwibWVzc2FnZSI6IjE3MTU3NzI0NDcuNzgwOXJhajY2NDQ5YzFmYmVhNmRqYXIxNzE1NzcyNDQ3Ljc4MDkifQ==.KAwrrQx8T6cZ9Ek6RAjXEi+bofXP5MeOCWV4XWWpkjo=",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "https://glexas.com/hostel_data/API/general/hostel_info_detail.php?hostel_code=ohm&user_role=manager",
							"protocol": "https",
							"host": [
								"glexas",
								"com"
							],
							"path": [
								"hostel_data",
								"API",
								"general",
								"hostel_info_detail.php"
							],
							"query": [
								{
									"key": "hostel_code",
									"value": "ohm"
								},
								{
									"key": "hostel_code",
									"value": "narmda",
									"disabled": true
								},
								{
									"key": "user_role",
									"value": "manager"
								},
								{
									"key": "user_role",
									"value": "student",
									"disabled": true
								},
								{
									"key": "user_role",
									"value": "rector",
									"disabled": true
								},
								{
									"key": "user_role",
									"value": "counsellor",
									"disabled": true
								},
								{
									"key": "user_role",
									"value": "parent",
									"disabled": true
								},
								{
									"key": "user_role",
									"value": "staff",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "income_expence",
			"item": [
				{
					"name": "manager_transaction_main_cru",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"flag\": \"Update\",\r\n    \"income_expence_record_id\": 10,\r\n    \"trn_type\":\"E\",\r\n    \"amount\":100,\r\n    \"trn_name\":\"test2\",\r\n    \"trn_description\":\"nothing\",\r\n    \"trn_date\":\"2024-05-12\",\r\n    \"status\":\"P\",\r\n    \"payment_mode\":\"UPI\",\r\n    \"payment_date\":\"2024-05-12\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}income_expence/manager_transaction_main_cru.php",
							"host": [
								"{{path}}income_expence"
							],
							"path": [
								"manager_transaction_main_cru.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_transaction_main_cru",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}income_expence/manager_transaction_main_cru.php?from_trn_date=2024-05-15&to_trn_date=2024-06-15&from_payment_date=2025-05-15&to_payment_date=2025-05-15&trn_type=I&status=P&payment_mode=upi",
							"host": [
								"{{path}}income_expence"
							],
							"path": [
								"manager_transaction_main_cru.php"
							],
							"query": [
								{
									"key": "from_trn_date",
									"value": "2024-05-15"
								},
								{
									"key": "to_trn_date",
									"value": "2024-06-15"
								},
								{
									"key": "from_payment_date",
									"value": "2025-05-15"
								},
								{
									"key": "to_payment_date",
									"value": "2025-05-15"
								},
								{
									"key": "trn_type",
									"value": "I"
								},
								{
									"key": "trn_type",
									"value": "E",
									"disabled": true
								},
								{
									"key": "status",
									"value": "P"
								},
								{
									"key": "status",
									"value": "UP",
									"disabled": true
								},
								{
									"key": "payment_mode",
									"value": "upi"
								},
								{
									"key": "payment_mode",
									"value": "cheque",
									"disabled": true
								},
								{
									"key": "payment_mode",
									"value": "bank",
									"disabled": true
								},
								{
									"key": "payment_mode",
									"value": "cash",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_transaction_main_cru",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "trn_type",
									"value": "I",
									"type": "text"
								},
								{
									"key": "tran_type",
									"value": "E",
									"type": "text"
								},
								{
									"key": "trn_name",
									"value": "abc",
									"type": "text"
								},
								{
									"key": "trn_description",
									"value": "abc",
									"type": "text"
								},
								{
									"key": "trn_date",
									"value": "2025-05-15",
									"type": "text"
								},
								{
									"key": "amount",
									"value": "1000",
									"type": "text"
								},
								{
									"key": "status",
									"value": "P",
									"type": "text"
								},
								{
									"key": "status",
									"value": "UP",
									"type": "text"
								},
								{
									"key": "payment_mode",
									"value": "CASH",
									"type": "text"
								},
								{
									"key": "payment_mode",
									"value": "upi",
									"type": "text"
								},
								{
									"key": "payment_mode",
									"value": "chequq",
									"type": "text"
								},
								{
									"key": "payment_mode",
									"value": "bank",
									"type": "text"
								},
								{
									"key": "check_upi_person",
									"value": "12345",
									"type": "text"
								},
								{
									"key": "payment_date",
									"value": "2025-05-15",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}income_expence/manager_transaction_main_cru.php",
							"host": [
								"{{path}}income_expence"
							],
							"path": [
								"manager_transaction_main_cru.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "leave",
			"item": [
				{
					"name": "leave_view",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "range_from_date",
									"value": "",
									"type": "text"
								},
								{
									"key": "range_to_date",
									"value": "",
									"type": "text"
								},
								{
									"key": "place",
									"value": "",
									"type": "text"
								},
								{
									"key": "manager_filter_status",
									"value": "",
									"type": "text"
								},
								{
									"key": "parent_filter_status",
									"value": "",
									"type": "text"
								},
								{
									"key": "counsellor_filter_status",
									"value": "P",
									"type": "text"
								},
								{
									"key": "leave_name",
									"value": "",
									"type": "text"
								},
								{
									"key": "student_user_code",
									"value": "",
									"type": "text"
								},
								{
									"key": "range_from_date",
									"value": "2023-05-15",
									"type": "text",
									"disabled": true
								},
								{
									"key": "range_to_date",
									"value": "2023-05-30",
									"type": "text",
									"disabled": true
								},
								{
									"key": "place",
									"value": "Abcd",
									"type": "text",
									"disabled": true
								},
								{
									"key": "manager_filter_status",
									"value": "P",
									"type": "text",
									"disabled": true
								},
								{
									"key": "parent_filter_status",
									"value": "A",
									"type": "text",
									"disabled": true
								},
								{
									"key": "counsellor_filter_status",
									"value": "R",
									"type": "text",
									"disabled": true
								},
								{
									"key": "leave_name",
									"value": "Holiday",
									"type": "text",
									"disabled": true
								},
								{
									"key": "student_user_code",
									"value": "Student7",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}leave/leave_view.php?student_user_code=Student1",
							"host": [
								"{{path}}leave"
							],
							"path": [
								"leave_view.php"
							],
							"query": [
								{
									"key": "range_to_date",
									"value": null,
									"disabled": true
								},
								{
									"key": "range_from_date",
									"value": null,
									"disabled": true
								},
								{
									"key": "place",
									"value": null,
									"disabled": true
								},
								{
									"key": "manager_filter_status",
									"value": null,
									"disabled": true
								},
								{
									"key": "parent_filter_status",
									"value": null,
									"disabled": true
								},
								{
									"key": "counsellor_status_filter",
									"value": null,
									"disabled": true
								},
								{
									"key": "leave_name",
									"value": null,
									"disabled": true
								},
								{
									"key": "student_user_code",
									"value": "Student1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "mcpr_leave_ru",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"leave_record_id\": 12,\r\n    \"leave_status\": \"R\",\r\n    \"is_exended_flag\": false,\r\n    \"swipe\": true,\r\n    \"latitude\": 37.7749,\r\n    \"longitude\": -122.4194\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}leave/mcpr_leave_ru.php",
							"host": [
								"{{path}}leave"
							],
							"path": [
								"mcpr_leave_ru.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "mcpr_leave_ru",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}leave/mcpr_leave_ru.php",
							"host": [
								"{{path}}leave"
							],
							"path": [
								"mcpr_leave_ru.php"
							],
							"query": [
								{
									"key": "range_to_date",
									"value": "2022-02-05",
									"disabled": true
								},
								{
									"key": "range_from_date",
									"value": "2022-03-05",
									"disabled": true
								},
								{
									"key": "place",
									"value": "home",
									"disabled": true
								},
								{
									"key": "manager_filter_status",
									"value": "A",
									"disabled": true
								},
								{
									"key": "manager_filter_status",
									"value": "R",
									"disabled": true
								},
								{
									"key": "manager_filter_status",
									"value": "P",
									"disabled": true
								},
								{
									"key": "parent_filter_status",
									"value": "A",
									"disabled": true
								},
								{
									"key": "parent_filter_status",
									"value": "R",
									"disabled": true
								},
								{
									"key": "parent_filter_status",
									"value": "P",
									"disabled": true
								},
								{
									"key": "counsellor_filter_status",
									"value": "A",
									"disabled": true
								},
								{
									"key": "counsellor_filter_status",
									"value": "R",
									"disabled": true
								},
								{
									"key": "counsellor_filter_status",
									"value": "P",
									"disabled": true
								},
								{
									"key": "leave_name",
									"value": "holiday",
									"disabled": true
								},
								{
									"key": "student_user_code",
									"value": "Student",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "student_leave_type_list",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}leave/student_leave_type_list.php",
							"host": [
								"{{path}}leave"
							],
							"path": [
								"student_leave_type_list.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_leave_crud",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"leave_record_id\": 173\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}leave/student_leave_crud.php",
							"host": [
								"{{path}}leave"
							],
							"path": [
								"student_leave_crud.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_leave_crud",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}leave/student_leave_crud.php?range_to_date=2024-05-31&range_from_date=2024-05-01&place=Home&manager_filter_status=A&parent_filter_status=A&counsellor_filter_status=A&leave_name=Holiday&student_user_code=Student",
							"host": [
								"{{path}}leave"
							],
							"path": [
								"student_leave_crud.php"
							],
							"query": [
								{
									"key": "range_to_date",
									"value": "2024-05-31"
								},
								{
									"key": "range_from_date",
									"value": "2024-05-01"
								},
								{
									"key": "place",
									"value": "Home"
								},
								{
									"key": "manager_filter_status",
									"value": "A"
								},
								{
									"key": "manager_filter_status",
									"value": "R",
									"disabled": true
								},
								{
									"key": "manager_filter_status",
									"value": "P",
									"disabled": true
								},
								{
									"key": "parent_filter_status",
									"value": "A"
								},
								{
									"key": "parent_filter_status",
									"value": "R",
									"disabled": true
								},
								{
									"key": "parent_filter_status",
									"value": "P",
									"disabled": true
								},
								{
									"key": "counsellor_filter_status",
									"value": "A"
								},
								{
									"key": "counsellor_filter_status",
									"value": "R",
									"disabled": true
								},
								{
									"key": "counsellor_filter_status",
									"value": "P",
									"disabled": true
								},
								{
									"key": "leave_name",
									"value": "Holiday"
								},
								{
									"key": "student_user_code",
									"value": "Student"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "student_leave_crud",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "leave_main_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "leave_place",
									"value": "Home",
									"type": "text"
								},
								{
									"key": "reason",
									"value": "holiday",
									"type": "text"
								},
								{
									"key": "from_date",
									"value": "2024-05-15",
									"type": "text"
								},
								{
									"key": "to_date",
									"value": "2024-05-16",
									"type": "text"
								},
								{
									"key": "from_time",
									"value": "09:00:00",
									"type": "text"
								},
								{
									"key": "to_time",
									"value": "17:00:00",
									"type": "text"
								},
								{
									"key": "student_latitude",
									"value": "40.7128",
									"type": "text"
								},
								{
									"key": "student_longitude",
									"value": "-74.0060",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}leave/student_leave_crud.php",
							"host": [
								"{{path}}leave"
							],
							"path": [
								"student_leave_crud.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_leave_crud",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"leave_main_id\": 1,\r\n    \"leave_place\": \"Office\",\r\n    \"reason\": \"Taking personal leave\",\r\n    \"from_date\": \"2024-05-15\",\r\n    \"to_date\": \"2024-05-16\",\r\n    \"from_time\": \"09:00:00\",\r\n    \"to_time\": \"17:00:00\",\r\n    \"device_id\": 123456,\r\n    \"student_latitude\": 40.7128,\r\n    \"student_longitude\": -74.0060,\r\n    \"leave_record_id\": 456,\r\n    \"security_flag\": \"I\",\r\n    \"security_in_time\": \"08:45:00\",\r\n    \"security_out_time\": \"17:15:00\",\r\n    \"extended\": \"Y\",\r\n    \"extended_time\": \"00:00:00\",\r\n    \"extended_date\": \"2024-05-16\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}leave/student_leave_crud.php",
							"host": [
								"{{path}}leave"
							],
							"path": [
								"student_leave_crud.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "mcpr_location_device_check_r.php",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{path}}leave/mcpr_location_device_check_r.php?leave_record_id=1",
							"host": [
								"{{path}}leave"
							],
							"path": [
								"mcpr_location_device_check_r.php"
							],
							"query": [
								{
									"key": "leave_record_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "light_bill",
			"item": [
				{
					"name": "manager_room_light_bill_insert",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "room_main_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "light_bill_detail_id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}light_bill/manager_room_light_bill_insert.php",
							"host": [
								"{{path}}light_bill"
							],
							"path": [
								"manager_room_light_bill_insert.php"
							],
							"query": [
								{
									"key": "room_main_id",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_room_light_bill_view",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "room_main_id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}light_bill/manager_room_light_bill_view.php",
							"host": [
								"{{path}}light_bill"
							],
							"path": [
								"manager_room_light_bill_view.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "room_main",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "light_bill_detail_id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{local_path}}light_bill/room_main.php",
							"host": [
								"{{local_path}}light_bill"
							],
							"path": [
								"room_main.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_studentwise_light_bill_view",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "room_light_bill_record_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "room_light_bill_record_id",
									"value": "1",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}light_bill/manager_studentwise_light_bill_view.php",
							"host": [
								"{{path}}light_bill"
							],
							"path": [
								"manager_studentwise_light_bill_view.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_room_light_bill_update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "room_light_bill_record_id",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "room_main_id",
									"value": "2",
									"type": "text"
								},
								{
									"key": "new_unit",
									"value": "100",
									"type": "text"
								},
								{
									"key": "total_unit",
									"value": "270",
									"type": "text"
								},
								{
									"key": "total_bill",
									"value": "500",
									"type": "text"
								},
								{
									"key": "from_date",
									"value": "2022-04-10",
									"type": "text"
								},
								{
									"key": "to_date",
									"value": "2022-05-10",
									"type": "text"
								},
								{
									"key": "individual_light_bill",
									"value": "{ \"Student1\": 50,\"Student2\": 80, \"Student3\": 120 }",
									"type": "text"
								},
								{
									"key": "light_bill_detail_id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}light_bill/manager_room_light_bill_update.php",
							"host": [
								"{{path}}light_bill"
							],
							"path": [
								"manager_room_light_bill_update.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_parent_light_bill_view",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{local_path}}light_bill/student_parent_light_bill_view.php",
							"host": [
								"{{local_path}}light_bill"
							],
							"path": [
								"student_parent_light_bill_view.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_light_bill_view_insert",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "new_unit",
									"value": "1010",
									"type": "text"
								},
								{
									"key": "per_unit_price",
									"value": "10",
									"type": "text"
								},
								{
									"key": "total_bill",
									"value": "10000",
									"type": "text"
								},
								{
									"key": "total_unit",
									"value": "1000",
									"type": "text"
								},
								{
									"key": "status",
									"value": "121",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "view",
									"type": "text"
								},
								{
									"key": "light_bill_detail_id",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "from_date",
									"value": "2023-03-20",
									"type": "text",
									"disabled": true
								},
								{
									"key": "to_date",
									"value": "2023-03-21",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}light_bill/manager_light_bill_view_insert.php",
							"host": [
								"{{path}}light_bill"
							],
							"path": [
								"manager_light_bill_view_insert.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "notice",
			"item": [
				{
					"name": "manager_notification_record",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}notice/manager_notification_record.php",
							"host": [
								"{{path}}notice"
							],
							"path": [
								"manager_notification_record.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "notification_view",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "archieved_status",
									"value": "",
									"type": "text"
								},
								{
									"key": "notifications_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "archieved_status",
									"value": "S",
									"type": "text",
									"disabled": true
								},
								{
									"key": "notifications_id",
									"value": "2",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}notice/notification_view.php",
							"host": [
								"{{path}}notice"
							],
							"path": [
								"notification_view.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_notification_cr",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}notice/manager_notification_cr.php",
							"host": [
								"{{path}}notice"
							],
							"path": [
								"manager_notification_cr.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_notification_cr",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "flag",
									"value": "student",
									"type": "text"
								},
								{
									"key": "flag",
									"value": "parent",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "counsellor",
									"type": "text",
									"disabled": true
								},
								{
									"key": "title",
									"value": "Notice6",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Fees not paid",
									"type": "text"
								},
								{
									"key": "till_time",
									"value": "2023-05-30",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}notice/manager_notification_cr.php",
							"host": [
								"{{path}}notice"
							],
							"path": [
								"manager_notification_cr.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "registration",
			"item": [
				{
					"name": "access_type",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{manager_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}registration/access_type.php",
							"host": [
								"{{path}}registration"
							],
							"path": [
								"access_type.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "check_unique_details_availability",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_code_suggestion",
									"value": "Student3 ",
									"type": "text"
								},
								{
									"key": "phone_no",
									"value": "12345678145",
									"type": "text"
								},
								{
									"key": "phone_country_code",
									"value": "+91",
									"type": "text"
								},
								{
									"key": "hostel_code_suggestion",
									"value": "ohm",
									"type": "text"
								},
								{
									"key": "email",
									"value": "neelthomas.19@gmail.com",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}registration/check_unique_details_availability.php",
							"host": [
								"{{path}}registration"
							],
							"path": [
								"check_unique_details_availability.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "forgot_username",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "phone_no",
									"value": "9081653714",
									"type": "text"
								},
								{
									"key": "email",
									"value": "manan@gmail.com",
									"type": "text"
								},
								{
									"key": "flag",
									"value": "P",
									"type": "text"
								},
								{
									"key": "app_type",
									"value": "W",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}registration/forgot_username.php",
							"host": [
								"{{path}}registration"
							],
							"path": [
								"forgot_username.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "forgot_password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "",
									"type": "text"
								},
								{
									"key": "new_password",
									"value": "",
									"type": "text"
								},
								{
									"key": "confirm_new_password",
									"value": "",
									"type": "text"
								},
								{
									"key": "flag",
									"value": "",
									"type": "text"
								},
								{
									"key": "app_type",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}registration/forgot_password.php",
							"host": [
								"{{path}}registration"
							],
							"path": [
								"forgot_password.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "app_type",
									"value": "W",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}registration/logout.php",
							"host": [
								"{{path}}registration"
							],
							"path": [
								"logout.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "otp_status_update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "is_verified",
									"value": "Y",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}registration/otp_status_update.php",
							"host": [
								"{{path}}registration"
							],
							"path": [
								"otp_status_update.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "otp_status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}registration/otp_status.php",
							"host": [
								"{{path}}registration"
							],
							"path": [
								"otp_status.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "register",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_role",
									"value": "parent",
									"type": "text"
								},
								{
									"key": "user_code",
									"value": "Parent63",
									"type": "text"
								},
								{
									"key": "user_hostel_code",
									"value": "ohm",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "abhi163",
									"type": "text"
								},
								{
									"key": "middle_name",
									"value": "vv",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "vv",
									"type": "text"
								},
								{
									"key": "phone_number",
									"value": "1234567110",
									"type": "text"
								},
								{
									"key": "email",
									"value": "abhi110@gmail.com",
									"type": "text"
								},
								{
									"key": "pwd",
									"value": "123456",
									"type": "text"
								},
								{
									"key": "address_line1",
									"value": "Vadodara",
									"type": "text"
								},
								{
									"key": "address_line2",
									"value": "Vadodara",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Vadodara",
									"type": "text"
								},
								{
									"key": "taluka",
									"value": "Vadodara",
									"type": "text"
								},
								{
									"key": "district",
									"value": "Vadodara",
									"type": "text"
								},
								{
									"key": "state",
									"value": "Gujarat",
									"type": "text"
								},
								{
									"key": "country",
									"value": "Inida",
									"type": "text"
								},
								{
									"key": "pincode",
									"value": "390000",
									"type": "text"
								},
								{
									"key": "is_verified",
									"value": "Y",
									"type": "text"
								},
								{
									"key": "phone_country_code",
									"value": "+91",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}registration/register.php",
							"host": [
								"{{path}}registration"
							],
							"path": [
								"register.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if login is successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.be.true;\r",
									"    \r",
									"    if (jsonData.status) {\r",
									"        pm.environment.set(\"api_token\", jsonData.api_token);\r",
									"        console.log(\"API Token is: \" + jsonData.api_token);\r",
									"    } else {\r",
									"        console.log(\"Login failed: \" + jsonData.message);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" :\"Manager2\",\r\n    \"password\" : \"Manager\",\r\n    \"app_type\" : \"A\"\r\n}"
						},
						"url": {
							"raw": "{{path}}registration/login.php",
							"host": [
								"{{path}}registration"
							],
							"path": [
								"login.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "room_allotment",
			"item": [
				{
					"name": "manager_branch_room_share",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}room_allotment/manager_branch_room_share.php",
							"host": [
								"{{path}}room_allotment"
							],
							"path": [
								"manager_branch_room_share.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "mr_room_crd",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "room_main_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "student_user_code",
									"value": "Student7",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}room_allotment/mr_room_crd.php",
							"host": [
								"{{path}}room_allotment"
							],
							"path": [
								"mr_room_crd.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "mr_room_crd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}room_allotment/mr_room_crd.php?room_main_id=1",
							"host": [
								"{{path}}room_allotment"
							],
							"path": [
								"mr_room_crd.php"
							],
							"query": [
								{
									"key": "room_main_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "mr_room_crd",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"room_main_id\": 1,\r\n    \"student_user_code\": \"Student\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}room_allotment/mr_room_crd.php",
							"host": [
								"{{path}}room_allotment"
							],
							"path": [
								"mr_room_crd.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_room_list",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "room_status_filter",
									"value": "F",
									"type": "text"
								},
								{
									"key": "room_sharing_filter",
									"value": "0",
									"type": "text"
								},
								{
									"key": "no_of_student_filter",
									"value": "0",
									"type": "text"
								},
								{
									"key": "module_name",
									"value": "room",
									"type": "text"
								},
								{
									"key": "room_status_filter",
									"value": "F",
									"type": "text",
									"disabled": true
								},
								{
									"key": "room_sharing_filter",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "no_of_student_filter",
									"value": "2",
									"type": "text",
									"disabled": true
								},
								{
									"key": "module_name",
									"value": "room",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}room_allotment/manager_room_list.php?room_status_filter=E&room_sharing_filter=0&no_of_student_filter=0&module_name=room",
							"host": [
								"{{path}}room_allotment"
							],
							"path": [
								"manager_room_list.php"
							],
							"query": [
								{
									"key": "room_status_filter",
									"value": "E"
								},
								{
									"key": "room_sharing_filter",
									"value": "0"
								},
								{
									"key": "no_of_student_filter",
									"value": "0"
								},
								{
									"key": "module_name",
									"value": "room"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_room_request",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "flag",
									"value": "Request",
									"type": "text"
								},
								{
									"key": "flag",
									"value": "Responce",
									"type": "text",
									"disabled": true
								},
								{
									"key": "room_request_id",
									"value": "16",
									"type": "text",
									"disabled": true
								},
								{
									"key": "request",
									"value": "Y",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}room_allotment/manager_room_request.php",
							"host": [
								"{{path}}room_allotment"
							],
							"path": [
								"manager_room_request.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_room_student_list",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}room_allotment/manager_room_student_list.php?room_main_id=4",
							"host": [
								"{{path}}room_allotment"
							],
							"path": [
								"manager_room_student_list.php"
							],
							"query": [
								{
									"key": "room_main_id",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_student_remove",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"room_main_id\": 1,\r\n    \"student_user_code\": \"Student7\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}room_allotment/manager_student_room_remove.php",
							"host": [
								"{{path}}room_allotment"
							],
							"path": [
								"manager_student_room_remove.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_student_room_transfer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"room_main_id\": 4,\r\n    \"user_code\": \"Student1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}room_allotment/manager_student_room_transfer.php",
							"host": [
								"{{path}}room_allotment"
							],
							"path": [
								"manager_student_room_transfer.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_room_request.php",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "room_main_id",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}room_allotment/student_room_request.php",
							"host": [
								"{{path}}room_allotment"
							],
							"path": [
								"student_room_request.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "search",
			"item": [
				{
					"name": "scp_autocomplete",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_code",
									"value": "A",
									"type": "text"
								},
								{
									"key": "flag",
									"value": "P",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}search/scp_autocomplete.php",
							"host": [
								"{{path}}search"
							],
							"path": [
								"scp_autocomplete.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "ms_block_room_list",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "flag",
									"value": "Room",
									"type": "text"
								},
								{
									"key": "is_rector",
									"value": "false",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "Block",
									"type": "text",
									"disabled": true
								},
								{
									"key": "block_number",
									"value": "Building3",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}search/ms_block_room_list.php",
							"host": [
								"{{path}}search"
							],
							"path": [
								"ms_block_room_list.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "sc_college_deparment_list",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "flag",
									"value": "College",
									"type": "text"
								},
								{
									"key": "college_main_id",
									"value": "2",
									"type": "text"
								},
								{
									"key": "department_name",
									"value": "C",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "College",
									"type": "text",
									"disabled": true
								},
								{
									"key": "college_name",
									"value": "C",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}search/sc_college_deparment_list.php",
							"host": [
								"{{path}}search"
							],
							"path": [
								"sc_college_deparment_list.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "user_role",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}search/user_role.php",
							"host": [
								"{{path}}search"
							],
							"path": [
								"user_role.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_staff_position_list",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}search/manager_staff_position_list.php",
							"host": [
								"{{path}}search"
							],
							"path": [
								"manager_staff_position_list.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "security",
			"item": [
				{
					"name": "access_token_add",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "version_key",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}security/access_token_add.php",
							"host": [
								"{{path}}security"
							],
							"path": [
								"access_token_add.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "access_token_check",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}security/access_token_check.php",
							"host": [
								"{{path}}security"
							],
							"path": [
								"access_token_check.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "access_token_refresh",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "latitude",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "longitude",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "app_type",
									"value": "I",
									"type": "text",
									"disabled": true
								},
								{
									"key": "app_type",
									"value": "A",
									"type": "text",
									"disabled": true
								},
								{
									"key": "app_type",
									"value": "W",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}security/access_token_refresh.php",
							"host": [
								"{{path}}security"
							],
							"path": [
								"access_token_refresh.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "access_token_verify",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}security/access_token_verify.php",
							"host": [
								"{{path}}security"
							],
							"path": [
								"access_token_verify.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "api_token_check",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}security/api_token_check.php",
							"host": [
								"{{path}}security"
							],
							"path": [
								"api_token_check.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "api_token_refresh",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "api_token",
									"value": "",
									"type": "text"
								},
								{
									"key": "reason",
									"value": "",
									"type": "text"
								},
								{
									"key": "latitude",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "longitude",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "app_type",
									"value": "I",
									"type": "text"
								},
								{
									"key": "app_type",
									"value": "A",
									"type": "text",
									"disabled": true
								},
								{
									"key": "app_type",
									"value": "W",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}security/api_token_refresh.php",
							"host": [
								"{{path}}security"
							],
							"path": [
								"api_token_refresh.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "api_token_verify",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}security/api_token_verify.php",
							"host": [
								"{{path}}security"
							],
							"path": [
								"api_token_verify.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "max_login_device_remove",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "device_record_id",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}security/max_login_device_remove.php",
							"host": [
								"{{path}}security"
							],
							"path": [
								"max_login_device_remove.php"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "image_data_upload",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image_path_name",
									"value": "localhost/img/6.jpg",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{path}}settings/image_data_upload.php",
							"host": [
								"{{path}}settings"
							],
							"path": [
								"image_data_upload.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "pc_manage_student_update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "flag",
									"value": "View",
									"type": "text"
								},
								{
									"key": "flag",
									"value": "Update",
									"type": "text",
									"disabled": true
								},
								{
									"key": "student_relation_main_id",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}settings/pc_manage_student_update.php",
							"host": [
								"{{path}}settings"
							],
							"path": [
								"pc_manage_student_update.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "profile_update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "student_main_id",
									"value": "7",
									"type": "text",
									"disabled": true
								},
								{
									"key": "parent_main_id",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "counsellor_main_id",
									"value": "3",
									"type": "text",
									"disabled": true
								},
								{
									"key": "staff_main_id",
									"value": "43",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "first_name",
									"value": "aaa",
									"type": "text"
								},
								{
									"key": "middle_name",
									"value": "bbbb",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "ccc",
									"type": "text"
								},
								{
									"key": "email",
									"value": "xyz@gmail.com",
									"type": "text"
								},
								{
									"key": "mobile_number",
									"value": "9465327444",
									"type": "text"
								},
								{
									"key": "country_code",
									"value": "+91",
									"type": "text"
								},
								{
									"key": "address_main_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "address_line_1",
									"value": "aaP1",
									"type": "text"
								},
								{
									"key": "parent_username",
									"value": "Parent1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "address_line_2",
									"value": "AL2",
									"type": "text"
								},
								{
									"key": "city",
									"value": "VadodaraPS1",
									"type": "text"
								},
								{
									"key": "taluka",
									"value": "VadodaraPS1",
									"type": "text"
								},
								{
									"key": "district",
									"value": "VadodaraP1",
									"type": "text"
								},
								{
									"key": "state",
									"value": "GujaratPS1",
									"type": "text"
								},
								{
									"key": "country",
									"value": "India",
									"type": "text"
								},
								{
									"key": "pincode",
									"value": "390001",
									"type": "text"
								},
								{
									"key": "student_username",
									"value": "Stuser",
									"type": "text",
									"disabled": true
								},
								{
									"key": "photo",
									"value": "pic1.jpg",
									"type": "text"
								},
								{
									"key": "college_name",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "college_enrollment_id",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "counsellor_username",
									"value": "Counsellor1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "relative_type",
									"value": "C",
									"type": "text",
									"disabled": true
								},
								{
									"key": "room_main_id",
									"value": "4",
									"type": "text",
									"disabled": true
								},
								{
									"key": "student_username",
									"value": "Student9",
									"type": "text",
									"disabled": true
								},
								{
									"key": "college_employee_id",
									"value": "5",
									"type": "text",
									"disabled": true
								},
								{
									"key": "college_detail_id",
									"value": "2",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}settings/profile_update.php",
							"host": [
								"{{path}}settings"
							],
							"path": [
								"profile_update.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "profile_view",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{path}}settings/profile_view.php",
							"host": [
								"{{path}}settings"
							],
							"path": [
								"profile_view.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_default_hostel_status_update",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "old_hostel_code",
									"value": "ohm1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}settings/student_default_hostel_status_update.php",
							"host": [
								"{{path}}settings"
							],
							"path": [
								"student_default_hostel_status_update.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_new_hostel_add",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "new_hostel_code",
									"value": "ohm",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}settings/student_new_hostel_add.php",
							"host": [
								"{{path}}settings"
							],
							"path": [
								"student_new_hostel_add.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_old_hostelcode",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{path}}settings/student_old_hostelcode.php",
							"host": [
								"{{path}}settings"
							],
							"path": [
								"student_old_hostelcode.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_relation_insert",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "flag",
									"value": "Both",
									"type": "text"
								},
								{
									"key": "parent_code",
									"value": "Parent4",
									"type": "text"
								},
								{
									"key": "counsellor_code",
									"value": "Counsellor1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{local_path}}settings/student_relation_insert.php",
							"host": [
								"{{local_path}}settings"
							],
							"path": [
								"student_relation_insert.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "rector_associate_building_list",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_code",
									"value": "Rector1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}settings/rector_associate_building_list.php",
							"host": [
								"{{path}}settings"
							],
							"path": [
								"rector_associate_building_list.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "rector_details_add_remove",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_code",
									"value": "Rector3",
									"type": "text"
								},
								{
									"key": "branch_building_name",
									"value": "[Building3]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}settings/rector_details_add_remove.php",
							"host": [
								"{{path}}settings"
							],
							"path": [
								"rector_details_add_remove.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "old_profile_view",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{path}}settings/old_profile_view.php",
							"host": [
								"{{path}}settings"
							],
							"path": [
								"old_profile_view.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "change_password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "password",
									"value": "123456",
									"type": "text"
								},
								{
									"key": "confirm_password",
									"value": "123456",
									"type": "text"
								},
								{
									"key": "app_type",
									"value": "W",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}settings/change_password.php",
							"host": [
								"{{path}}settings"
							],
							"path": [
								"change_password.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "change_username",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "new_user_name",
									"value": "Guest1",
									"type": "text"
								},
								{
									"key": "app_type",
									"value": "F",
									"type": "text"
								},
								{
									"key": "old_user_name",
									"value": "Guest1",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}settings/change_username.php",
							"host": [
								"{{path}}settings"
							],
							"path": [
								"change_username.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "manager_counsellor_detail_profile_view",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_code",
									"value": "Counsellor",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}user/manager_counsellor_detail_profile_view.php",
							"host": [
								"{{path}}user"
							],
							"path": [
								"manager_counsellor_detail_profile_view.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_counsellor_list",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "flag",
									"value": "",
									"type": "text"
								},
								{
									"key": "flag",
									"value": "active",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "linked_student",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}user/manager_counsellor_list.php",
							"host": [
								"{{path}}user"
							],
							"path": [
								"manager_counsellor_list.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_parent_detail_profile_view",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_code",
									"value": "Parent",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}user/manager_parent_detail_profile_view.php",
							"host": [
								"{{path}}user"
							],
							"path": [
								"manager_parent_detail_profile_view.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_parent_list",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "flag",
									"value": "",
									"type": "text"
								},
								{
									"key": "flag",
									"value": "active",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "linked_student",
									"type": "text",
									"disabled": true
								},
								{
									"key": "flag",
									"value": "allocated_room_student",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}user/manager_parent_list.php",
							"host": [
								"{{path}}user"
							],
							"path": [
								"manager_parent_list.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_student_details_from_counsellor",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_code",
									"value": "Counsellor63",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}user/manager_student_details_from_counsellor.php",
							"host": [
								"{{path}}user"
							],
							"path": [
								"manager_student_details_from_counsellor.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_student_list",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "student_type",
									"value": "active",
									"type": "text"
								},
								{
									"key": "student_type",
									"value": "inactive",
									"type": "text",
									"disabled": true
								},
								{
									"key": "student_type",
									"value": "allocated",
									"type": "text",
									"disabled": true
								},
								{
									"key": "student_type",
									"value": "unallocated",
									"type": "text",
									"disabled": true
								},
								{
									"key": "student_type",
									"value": "uarStudent",
									"type": "text",
									"disabled": true
								},
								{
									"key": "student_type",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "module_name",
									"value": "fees",
									"type": "text"
								},
								{
									"key": "module_name",
									"value": "room",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}user/manager_student_list.php",
							"host": [
								"{{path}}user"
							],
							"path": [
								"manager_student_list.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "student_detail_profile_view",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_code",
									"value": "Stuser",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}user/student_detail_profile_view.php",
							"host": [
								"{{path}}user"
							],
							"path": [
								"student_detail_profile_view.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "manager_student_remove",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_code",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}user/manager_student_remove.php",
							"host": [
								"{{path}}user"
							],
							"path": [
								"manager_student_remove.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "stay",
			"item": [
				{
					"name": "stay_hostel_list",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "flag",
									"value": "API",
									"type": "text"
								},
								{
									"key": "hostel_city",
									"value": "Anand1",
									"type": "text"
								},
								{
									"key": "flag",
									"value": "ACC",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}stay/stay_hostel_list.php",
							"host": [
								"{{path}}stay"
							],
							"path": [
								"stay_hostel_list.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "stay_registration",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_code",
									"value": "Guest4",
									"type": "text"
								},
								{
									"key": "student_first_name",
									"value": "akbdjnas",
									"type": "text"
								},
								{
									"key": "student_middle_name",
									"value": "asfnkjsd",
									"type": "text"
								},
								{
									"key": "student_last_name",
									"value": "andkjs",
									"type": "text"
								},
								{
									"key": "student_email",
									"value": "abc@gmail.com",
									"type": "text"
								},
								{
									"key": "student_phone_number",
									"value": "9510370434",
									"type": "text"
								},
								{
									"key": "is_verified",
									"value": "Y",
									"type": "text"
								},
								{
									"key": "phone_country_code",
									"value": "+91",
									"type": "text"
								},
								{
									"key": "student_pwd",
									"value": "123456",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{local_path}}stay/stay_registration.php",
							"host": [
								"{{local_path}}stay"
							],
							"path": [
								"stay_registration.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "stay_profile_view.php",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_code",
									"value": "Student223",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}stay/stay_profile_view.php",
							"host": [
								"{{path}}stay"
							],
							"path": [
								"stay_profile_view.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "raj",
			"item": [
				{
					"name": "new_admission_crud",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"registration_main_id\": 1947\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}raj/new_admission_crud.php",
							"host": [
								"{{path}}raj"
							],
							"path": [
								"new_admission_crud.php"
							],
							"query": [
								{
									"key": "user_code",
									"value": "test1",
									"disabled": true
								},
								{
									"key": "first_name",
									"value": "abcd",
									"disabled": true
								},
								{
									"key": "middle_name",
									"value": "efgh",
									"disabled": true
								},
								{
									"key": "last_name",
									"value": "ijkl",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "1234567894",
									"disabled": true
								},
								{
									"key": "phone_country_code",
									"value": "+91",
									"disabled": true
								},
								{
									"key": "email",
									"value": "abcd@efgh.com",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "new_admission_crud",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_code",
									"value": "test1",
									"disabled": true
								},
								{
									"key": "first_name",
									"value": "abcd",
									"disabled": true
								},
								{
									"key": "middle_name",
									"value": "efgh",
									"disabled": true
								},
								{
									"key": "last_name",
									"value": "ijkl",
									"disabled": true
								},
								{
									"key": "phone_number",
									"value": "1234567894",
									"disabled": true
								},
								{
									"key": "phone_country_code",
									"value": "+91",
									"disabled": true
								},
								{
									"key": "email",
									"value": "abcd@efgh.com",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{path}}raj/new_admission_crud.php",
							"host": [
								"{{path}}raj"
							],
							"path": [
								"new_admission_crud.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "new_admission_crud",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"registration_main_id\": 1947\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}raj/new_admission_crud.php",
							"host": [
								"{{path}}raj"
							],
							"path": [
								"new_admission_crud.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "new_admission_crud",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"registration_main_id\": 1947,\r\n    \"user_code\": \"Student\",\r\n    \"first_name\": \"abcd\",\r\n    \"middle_name\": \"efgh\",\r\n    \"last_name\": \"ijkl\",\r\n    \"phone_number\": 1234567896,\r\n    \"phone_country_code\": \"+91\",\r\n    \"email\": \"abcd@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}raj/new_admission_crud.php",
							"host": [
								"{{path}}raj"
							],
							"path": [
								"new_admission_crud.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "new_admission",
			"item": [
				{
					"name": "manager_new_admission_list",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "search_user_role",
									"value": "Student",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{path}}new_admission/manager_new_admission_list.php",
							"host": [
								"{{path}}new_admission"
							],
							"path": [
								"manager_new_admission_list.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "mr_enroll_status_ru",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"usercode_from_main_id\":1,\r\n    \"status\": \"A\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}new_admission/mr_enroll_status_ru.php",
							"host": [
								"{{path}}new_admission"
							],
							"path": [
								"mr_enroll_status_ru.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "mr_enroll_status_ru",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"usercode_from_main_id\":1,\r\n    \"status\": \"A\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{path}}new_admission/mr_enroll_status_ru.php?user_role=student",
							"host": [
								"{{path}}new_admission"
							],
							"path": [
								"mr_enroll_status_ru.php"
							],
							"query": [
								{
									"key": "user_role",
									"value": "student"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}